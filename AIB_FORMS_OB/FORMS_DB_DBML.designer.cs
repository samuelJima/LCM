#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIB_FORMS_OB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using System.Configuration;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AIB_LC_DB")]
	public partial class FORMS_DB_DBMLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTbl_Permission(Tbl_Permission instance);
    partial void UpdateTbl_Permission(Tbl_Permission instance);
    partial void DeleteTbl_Permission(Tbl_Permission instance);
    partial void InsertTbl_Role(Tbl_Role instance);
    partial void UpdateTbl_Role(Tbl_Role instance);
    partial void DeleteTbl_Role(Tbl_Role instance);
    partial void InsertTbl_User(Tbl_User instance);
    partial void UpdateTbl_User(Tbl_User instance);
    partial void DeleteTbl_User(Tbl_User instance);
    partial void InsertTbl_RoleResourcePermission(Tbl_RoleResourcePermission instance);
    partial void UpdateTbl_RoleResourcePermission(Tbl_RoleResourcePermission instance);
    partial void DeleteTbl_RoleResourcePermission(Tbl_RoleResourcePermission instance);
    partial void InsertTbl_Resource(Tbl_Resource instance);
    partial void UpdateTbl_Resource(Tbl_Resource instance);
    partial void DeleteTbl_Resource(Tbl_Resource instance);
    partial void InsertTBL_CORRESPONDENT_CURRENCY(TBL_CORRESPONDENT_CURRENCY instance);
    partial void UpdateTBL_CORRESPONDENT_CURRENCY(TBL_CORRESPONDENT_CURRENCY instance);
    partial void DeleteTBL_CORRESPONDENT_CURRENCY(TBL_CORRESPONDENT_CURRENCY instance);
    partial void InsertTBL_COUNTRY(TBL_COUNTRY instance);
    partial void UpdateTBL_COUNTRY(TBL_COUNTRY instance);
    partial void DeleteTBL_COUNTRY(TBL_COUNTRY instance);
    partial void InsertTBL_LC_CORRESPONDENT(TBL_LC_CORRESPONDENT instance);
    partial void UpdateTBL_LC_CORRESPONDENT(TBL_LC_CORRESPONDENT instance);
    partial void DeleteTBL_LC_CORRESPONDENT(TBL_LC_CORRESPONDENT instance);
    partial void InsertTBL_CURRENCY(TBL_CURRENCY instance);
    partial void UpdateTBL_CURRENCY(TBL_CURRENCY instance);
    partial void DeleteTBL_CURRENCY(TBL_CURRENCY instance);
    partial void InsertTBL_AIB_CURRENCY_RATE(TBL_AIB_CURRENCY_RATE instance);
    partial void UpdateTBL_AIB_CURRENCY_RATE(TBL_AIB_CURRENCY_RATE instance);
    partial void DeleteTBL_AIB_CURRENCY_RATE(TBL_AIB_CURRENCY_RATE instance);
    partial void InsertTBL_Branch(TBL_Branch instance);
    partial void UpdateTBL_Branch(TBL_Branch instance);
    partial void DeleteTBL_Branch(TBL_Branch instance);
    partial void InsertTBL_OPEN_THROUGH_BANK(TBL_OPEN_THROUGH_BANK instance);
    partial void UpdateTBL_OPEN_THROUGH_BANK(TBL_OPEN_THROUGH_BANK instance);
    partial void DeleteTBL_OPEN_THROUGH_BANK(TBL_OPEN_THROUGH_BANK instance);
    partial void InsertTBL_LC_PAYMENT_TYPE(TBL_LC_PAYMENT_TYPE instance);
    partial void UpdateTBL_LC_PAYMENT_TYPE(TBL_LC_PAYMENT_TYPE instance);
    partial void DeleteTBL_LC_PAYMENT_TYPE(TBL_LC_PAYMENT_TYPE instance);
    partial void InsertTBL_LETTER_OF_CREDIT(TBL_LETTER_OF_CREDIT instance);
    partial void UpdateTBL_LETTER_OF_CREDIT(TBL_LETTER_OF_CREDIT instance);
    partial void DeleteTBL_LETTER_OF_CREDIT(TBL_LETTER_OF_CREDIT instance);
    partial void InsertTBL_LC_EXCESS_AMOUNT(TBL_LC_EXCESS_AMOUNT instance);
    partial void UpdateTBL_LC_EXCESS_AMOUNT(TBL_LC_EXCESS_AMOUNT instance);
    partial void DeleteTBL_LC_EXCESS_AMOUNT(TBL_LC_EXCESS_AMOUNT instance);
    partial void InsertTBL_LC_INCREMENT(TBL_LC_INCREMENT instance);
    partial void UpdateTBL_LC_INCREMENT(TBL_LC_INCREMENT instance);
    partial void DeleteTBL_LC_INCREMENT(TBL_LC_INCREMENT instance);
    partial void InsertTBL_LC_EXTENTION(TBL_LC_EXTENTION instance);
    partial void UpdateTBL_LC_EXTENTION(TBL_LC_EXTENTION instance);
    partial void DeleteTBL_LC_EXTENTION(TBL_LC_EXTENTION instance);
    partial void InsertTBL_INVOICE(TBL_INVOICE instance);
    partial void UpdateTBL_INVOICE(TBL_INVOICE instance);
    partial void DeleteTBL_INVOICE(TBL_INVOICE instance);
    #endregion

    public FORMS_DB_DBMLDataContext() :
        base(ConfigurationManager.ConnectionStrings["AIB_LC_DBConnectionString"].ConnectionString)
    {
        OnCreated();
    }

		
		public FORMS_DB_DBMLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FORMS_DB_DBMLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FORMS_DB_DBMLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tbl_Permission> Tbl_Permissions
		{
			get
			{
				return this.GetTable<Tbl_Permission>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Role> Tbl_Roles
		{
			get
			{
				return this.GetTable<Tbl_Role>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_User> Tbl_Users
		{
			get
			{
				return this.GetTable<Tbl_User>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_RoleResourcePermission> Tbl_RoleResourcePermissions
		{
			get
			{
				return this.GetTable<Tbl_RoleResourcePermission>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Resource> Tbl_Resources
		{
			get
			{
				return this.GetTable<Tbl_Resource>();
			}
		}
		
		public System.Data.Linq.Table<TBL_CORRESPONDENT_CURRENCY> TBL_CORRESPONDENT_CURRENCies
		{
			get
			{
				return this.GetTable<TBL_CORRESPONDENT_CURRENCY>();
			}
		}
		
		public System.Data.Linq.Table<TBL_COUNTRY> TBL_COUNTRies
		{
			get
			{
				return this.GetTable<TBL_COUNTRY>();
			}
		}
		
		public System.Data.Linq.Table<TBL_LC_CORRESPONDENT> TBL_LC_CORRESPONDENTs
		{
			get
			{
				return this.GetTable<TBL_LC_CORRESPONDENT>();
			}
		}
		
		public System.Data.Linq.Table<TBL_CURRENCY> TBL_CURRENCies
		{
			get
			{
				return this.GetTable<TBL_CURRENCY>();
			}
		}
		
		public System.Data.Linq.Table<TBL_AIB_CURRENCY_RATE> TBL_AIB_CURRENCY_RATEs
		{
			get
			{
				return this.GetTable<TBL_AIB_CURRENCY_RATE>();
			}
		}
		
		public System.Data.Linq.Table<TBL_Branch> TBL_Branches
		{
			get
			{
				return this.GetTable<TBL_Branch>();
			}
		}
		
		public System.Data.Linq.Table<TBL_OPEN_THROUGH_BANK> TBL_OPEN_THROUGH_BANKs
		{
			get
			{
				return this.GetTable<TBL_OPEN_THROUGH_BANK>();
			}
		}
		
		public System.Data.Linq.Table<VW_CORRESPONDNCE_CURRENCY> VW_CORRESPONDNCE_CURRENCies
		{
			get
			{
				return this.GetTable<VW_CORRESPONDNCE_CURRENCY>();
			}
		}
		
		public System.Data.Linq.Table<TBL_LC_PAYMENT_TYPE> TBL_LC_PAYMENT_TYPEs
		{
			get
			{
				return this.GetTable<TBL_LC_PAYMENT_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<TBL_LETTER_OF_CREDIT> TBL_LETTER_OF_CREDITs
		{
			get
			{
				return this.GetTable<TBL_LETTER_OF_CREDIT>();
			}
		}
		
		public System.Data.Linq.Table<TBL_LC_EXCESS_AMOUNT> TBL_LC_EXCESS_AMOUNTs
		{
			get
			{
				return this.GetTable<TBL_LC_EXCESS_AMOUNT>();
			}
		}
		
		public System.Data.Linq.Table<TBL_LC_INCREMENT> TBL_LC_INCREMENTs
		{
			get
			{
				return this.GetTable<TBL_LC_INCREMENT>();
			}
		}
		
		public System.Data.Linq.Table<TBL_LC_EXTENTION> TBL_LC_EXTENTIONs
		{
			get
			{
				return this.GetTable<TBL_LC_EXTENTION>();
			}
		}
		
		public System.Data.Linq.Table<VW_LC_EXTENTION> VW_LC_EXTENTIONs
		{
			get
			{
				return this.GetTable<VW_LC_EXTENTION>();
			}
		}
		
		public System.Data.Linq.Table<TBL_INVOICE> TBL_INVOICEs
		{
			get
			{
				return this.GetTable<TBL_INVOICE>();
			}
		}
		
		public System.Data.Linq.Table<VW_DETAIL_LC> VW_DETAIL_LCs
		{
			get
			{
				return this.GetTable<VW_DETAIL_LC>();
			}
		}
		
		public System.Data.Linq.Table<VW_LC_DETAIL_ADVICE_DETAIL> VW_LC_DETAIL_ADVICE_DETAILs
		{
			get
			{
				return this.GetTable<VW_LC_DETAIL_ADVICE_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<VW_LC_WITH_ADVICE_SIGHT> VW_LC_WITH_ADVICE_SIGHTs
		{
			get
			{
				return this.GetTable<VW_LC_WITH_ADVICE_SIGHT>();
			}
		}
		
		public System.Data.Linq.Table<VW_LC_INCREMENTAMOUNT> VW_LC_INCREMENTAMOUNTs
		{
			get
			{
				return this.GetTable<VW_LC_INCREMENTAMOUNT>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCreat_Role")]
		public int spCreat_Role([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string roleName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleName, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spUpdate_SecurityQuestion")]
		public int spUpdate_SecurityQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SQ", DbType="NVarChar(50)")] string sQ, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SA", DbType="NVarChar(50)")] string sA)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, sQ, sA);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCreate_Permission")]
		public int spCreate_Permission([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string permissionName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), permissionName, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCreate_Resource")]
		public int spCreate_Resource([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string resourceName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Resource_Path", DbType="NVarChar(50)")] string resource_Path, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), resourceName, resource_Path, description, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCreate_RoleResourcePermission")]
		public int spCreate_RoleResourcePermission([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> resourceID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> permissionID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), resourceID, roleID, permissionID, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spUpdate_Role")]
		public int spUpdate_Role([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string roleName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID, roleName, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spUpdate_Resource")]
		public int spUpdate_Resource([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string resourceName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string resourcePath, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, resourceName, resourcePath, description, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCreate_User")]
		public int spCreate_User([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string firstname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string middlename, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string lastname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> deptID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string securityQuestion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string securityAnswer, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="BigInt")] System.Nullable<long> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsNew", DbType="Bit")] System.Nullable<bool> isNew)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, firstname, middlename, lastname, deptID, securityQuestion, securityAnswer, status, roleID, email, isNew);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spUpdate_FirstTimeAccess")]
		public int spUpdate_FirstTimeAccess([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsNew", DbType="Bit")] System.Nullable<bool> isNew)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, isNew);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spUpdate_User")]
		public int spUpdate_User([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string firstname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string middlename, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string lastname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> deptID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="BigInt")] System.Nullable<long> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(50)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, username, firstname, middlename, lastname, deptID, status, roleID, email);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spUpdate_UserStatus")]
		public int spUpdate_UserStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spUpdate_Password")]
		public int spUpdate_Password([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(50)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, password);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.saveOpenThroughBank")]
		public int saveOpenThroughBank([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string bankName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string bankCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> countryId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string ciyt)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankName, bankCode, countryId, ciyt);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateOpenThroughBank")]
		public int updateOpenThroughBank([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string bankName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string bankCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> countryId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string ciyt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> bankID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankName, bankCode, countryId, ciyt, bankID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateInterestbeginDate")]
		public int updateInterestbeginDate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> intrerestBeginDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> invoiceId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intrerestBeginDate, invoiceId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateLCStatus")]
		public int updateLCStatus([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string lcNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string lcStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lcNumber, lcStatus);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateInvoiceStatus")]
		public int updateInvoiceStatus([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> invoiceId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), status, invoiceId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.saveBranchs")]
		public int saveBranchs([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string branchName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string branchAbrivation, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string branchCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), branchName, branchAbrivation, branchCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateBranchs")]
		public int updateBranchs([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> branchId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string branchName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string branchAbrivation, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string branchcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), branchId, branchName, branchAbrivation, branchcode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateExcessAmount")]
		public int updateExcessAmount([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> excessAmount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string excessLCNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), excessAmount, excessLCNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.saveLCExcessAmount")]
		public int saveLCExcessAmount([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> excessAmount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ecessPermitYear, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string excessPermitCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> excessValueDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> excessAmountrate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string excessLCNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), excessAmount, ecessPermitYear, excessPermitCode, excessValueDate, excessAmountrate, excessLCNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.saveLCIncrementAmount")]
		public int saveLCIncrementAmount([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> incrementAmount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> incrementPermitYear, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string incrementPermitCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> incrementValueDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> incrementAmountrate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string incrementLCNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), incrementAmount, incrementPermitYear, incrementPermitCode, incrementValueDate, incrementAmountrate, incrementLCNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.incrementLCValue")]
		public int incrementLCValue([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> excessAmount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string excessLCNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), excessAmount, excessLCNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updatelcIncrementAmount")]
		public int updatelcIncrementAmount([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> incrementAmount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> incrementPermitYear, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string incrementPermitCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> incrementValueDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> incrementAmountrate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string incrementLCNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> incId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), incrementAmount, incrementPermitYear, incrementPermitCode, incrementValueDate, incrementAmountrate, incrementLCNumber, incId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.saveLCExtention")]
		public int saveLCExtention([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> extentionAmount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> extentionPeriods, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> extentionValueDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> extentioninvSequence, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string extentionLCNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), extentionAmount, extentionPeriods, extentionValueDate, extentioninvSequence, extentionLCNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateExtention")]
		public int updateExtention([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExtentionPeriod", DbType="Int")] System.Nullable<int> extentionPeriod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string extentionLCNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, extentionPeriod, extentionLCNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.saveLCOpening")]
		public int saveLCOpening(
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string lcNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string lccode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> valueDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string permitCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> permitYear, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lcValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string currency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> openingCurrRate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> marginPaid, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> rembBankId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> openThroughBankId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string supplyer, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> branchCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string customerAccount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string lcStatus, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> lcOpeningDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string customerName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string confirmationStatus, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string currencyType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> tollerance, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string accountBranch, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> openedForPeriod, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userexpirationLimit, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> openedByid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lcNumber, lccode, valueDate, permitCode, permitYear, lcValue, currency, openingCurrRate, marginPaid, rembBankId, openThroughBankId, supplyer, branchCode, customerAccount, lcStatus, lcOpeningDate, customerName, confirmationStatus, currencyType, tollerance, accountBranch, openedForPeriod, userexpirationLimit, openedByid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateLCOpening")]
		public int updateLCOpening(
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string lcNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> valueDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string permitCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> permitYear, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lcValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string currency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> openingCurrRate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> marginPaid, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> rembBankId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> openThroughBankId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string supplyer, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string customerAccount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string customerName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string confirmationStatus, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string currencyType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> tollerance, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string accountBranch, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> openedForPeriod, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userexpirationLimit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lcNumber, valueDate, permitCode, permitYear, lcValue, currency, openingCurrRate, marginPaid, rembBankId, openThroughBankId, supplyer, customerAccount, customerName, confirmationStatus, currencyType, tollerance, accountBranch, openedForPeriod, userexpirationLimit);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Permission")]
	public partial class Tbl_Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Permission_ID;
		
		private string _Permission_Name;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<Tbl_RoleResourcePermission> _Tbl_RoleResourcePermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermission_IDChanging(long value);
    partial void OnPermission_IDChanged();
    partial void OnPermission_NameChanging(string value);
    partial void OnPermission_NameChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Tbl_Permission()
		{
			this._Tbl_RoleResourcePermissions = new EntitySet<Tbl_RoleResourcePermission>(new Action<Tbl_RoleResourcePermission>(this.attach_Tbl_RoleResourcePermissions), new Action<Tbl_RoleResourcePermission>(this.detach_Tbl_RoleResourcePermissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permission_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Permission_ID
		{
			get
			{
				return this._Permission_ID;
			}
			set
			{
				if ((this._Permission_ID != value))
				{
					this.OnPermission_IDChanging(value);
					this.SendPropertyChanging();
					this._Permission_ID = value;
					this.SendPropertyChanged("Permission_ID");
					this.OnPermission_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permission_Name", DbType="NVarChar(15)")]
		public string Permission_Name
		{
			get
			{
				return this._Permission_Name;
			}
			set
			{
				if ((this._Permission_Name != value))
				{
					this.OnPermission_NameChanging(value);
					this.SendPropertyChanging();
					this._Permission_Name = value;
					this.SendPropertyChanged("Permission_Name");
					this.OnPermission_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Permission_Tbl_RoleResourcePermission", Storage="_Tbl_RoleResourcePermissions", ThisKey="Permission_ID", OtherKey="Permission_ID")]
		public EntitySet<Tbl_RoleResourcePermission> Tbl_RoleResourcePermissions
		{
			get
			{
				return this._Tbl_RoleResourcePermissions;
			}
			set
			{
				this._Tbl_RoleResourcePermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_RoleResourcePermissions(Tbl_RoleResourcePermission entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Permission = this;
		}
		
		private void detach_Tbl_RoleResourcePermissions(Tbl_RoleResourcePermission entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Role")]
	public partial class Tbl_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Role_ID;
		
		private string _Role_Name;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<Tbl_User> _Tbl_Users;
		
		private EntitySet<Tbl_RoleResourcePermission> _Tbl_RoleResourcePermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_IDChanging(long value);
    partial void OnRole_IDChanged();
    partial void OnRole_NameChanging(string value);
    partial void OnRole_NameChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Tbl_Role()
		{
			this._Tbl_Users = new EntitySet<Tbl_User>(new Action<Tbl_User>(this.attach_Tbl_Users), new Action<Tbl_User>(this.detach_Tbl_Users));
			this._Tbl_RoleResourcePermissions = new EntitySet<Tbl_RoleResourcePermission>(new Action<Tbl_RoleResourcePermission>(this.attach_Tbl_RoleResourcePermissions), new Action<Tbl_RoleResourcePermission>(this.detach_Tbl_RoleResourcePermissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Name", DbType="NVarChar(50)")]
		public string Role_Name
		{
			get
			{
				return this._Role_Name;
			}
			set
			{
				if ((this._Role_Name != value))
				{
					this.OnRole_NameChanging(value);
					this.SendPropertyChanging();
					this._Role_Name = value;
					this.SendPropertyChanged("Role_Name");
					this.OnRole_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Role_Tbl_User", Storage="_Tbl_Users", ThisKey="Role_ID", OtherKey="RoleID")]
		public EntitySet<Tbl_User> Tbl_Users
		{
			get
			{
				return this._Tbl_Users;
			}
			set
			{
				this._Tbl_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Role_Tbl_RoleResourcePermission", Storage="_Tbl_RoleResourcePermissions", ThisKey="Role_ID", OtherKey="Role_ID")]
		public EntitySet<Tbl_RoleResourcePermission> Tbl_RoleResourcePermissions
		{
			get
			{
				return this._Tbl_RoleResourcePermissions;
			}
			set
			{
				this._Tbl_RoleResourcePermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Users(Tbl_User entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Role = this;
		}
		
		private void detach_Tbl_Users(Tbl_User entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Role = null;
		}
		
		private void attach_Tbl_RoleResourcePermissions(Tbl_RoleResourcePermission entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Role = this;
		}
		
		private void detach_Tbl_RoleResourcePermissions(Tbl_RoleResourcePermission entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Users")]
	public partial class Tbl_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _First_Name;
		
		private string _Middle_Name;
		
		private string _Last_Name;
		
		private System.Nullable<long> _Dept_ID;
		
		private string _Security_Question;
		
		private string _Security_Answer;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<long> _RoleID;
		
		private string _Email;
		
		private System.Nullable<bool> _IsNew;
		
		private EntityRef<Tbl_Role> _Tbl_Role;
		
		private EntityRef<TBL_Branch> _TBL_Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnMiddle_NameChanging(string value);
    partial void OnMiddle_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnDept_IDChanging(System.Nullable<long> value);
    partial void OnDept_IDChanged();
    partial void OnSecurity_QuestionChanging(string value);
    partial void OnSecurity_QuestionChanged();
    partial void OnSecurity_AnswerChanging(string value);
    partial void OnSecurity_AnswerChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnRoleIDChanging(System.Nullable<long> value);
    partial void OnRoleIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsNewChanging(System.Nullable<bool> value);
    partial void OnIsNewChanged();
    #endregion
		
		public Tbl_User()
		{
			this._Tbl_Role = default(EntityRef<Tbl_Role>);
			this._TBL_Branch = default(EntityRef<TBL_Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="NVarChar(50)")]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middle_Name", DbType="NVarChar(50)")]
		public string Middle_Name
		{
			get
			{
				return this._Middle_Name;
			}
			set
			{
				if ((this._Middle_Name != value))
				{
					this.OnMiddle_NameChanging(value);
					this.SendPropertyChanging();
					this._Middle_Name = value;
					this.SendPropertyChanged("Middle_Name");
					this.OnMiddle_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="NVarChar(50)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dept_ID", DbType="BigInt")]
		public System.Nullable<long> Dept_ID
		{
			get
			{
				return this._Dept_ID;
			}
			set
			{
				if ((this._Dept_ID != value))
				{
					if (this._TBL_Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDept_IDChanging(value);
					this.SendPropertyChanging();
					this._Dept_ID = value;
					this.SendPropertyChanged("Dept_ID");
					this.OnDept_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Security_Question", DbType="NVarChar(50)")]
		public string Security_Question
		{
			get
			{
				return this._Security_Question;
			}
			set
			{
				if ((this._Security_Question != value))
				{
					this.OnSecurity_QuestionChanging(value);
					this.SendPropertyChanging();
					this._Security_Question = value;
					this.SendPropertyChanged("Security_Question");
					this.OnSecurity_QuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Security_Answer", DbType="NVarChar(50)")]
		public string Security_Answer
		{
			get
			{
				return this._Security_Answer;
			}
			set
			{
				if ((this._Security_Answer != value))
				{
					this.OnSecurity_AnswerChanging(value);
					this.SendPropertyChanging();
					this._Security_Answer = value;
					this.SendPropertyChanged("Security_Answer");
					this.OnSecurity_AnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="BigInt")]
		public System.Nullable<long> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Tbl_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNew", DbType="Bit")]
		public System.Nullable<bool> IsNew
		{
			get
			{
				return this._IsNew;
			}
			set
			{
				if ((this._IsNew != value))
				{
					this.OnIsNewChanging(value);
					this.SendPropertyChanging();
					this._IsNew = value;
					this.SendPropertyChanged("IsNew");
					this.OnIsNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Role_Tbl_User", Storage="_Tbl_Role", ThisKey="RoleID", OtherKey="Role_ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Tbl_Role Tbl_Role
		{
			get
			{
				return this._Tbl_Role.Entity;
			}
			set
			{
				Tbl_Role previousValue = this._Tbl_Role.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Role.Entity = null;
						previousValue.Tbl_Users.Remove(this);
					}
					this._Tbl_Role.Entity = value;
					if ((value != null))
					{
						value.Tbl_Users.Add(this);
						this._RoleID = value.Role_ID;
					}
					else
					{
						this._RoleID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Tbl_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Branch_Tbl_User", Storage="_TBL_Branch", ThisKey="Dept_ID", OtherKey="branchid", IsForeignKey=true, DeleteRule="CASCADE")]
		public TBL_Branch TBL_Branch
		{
			get
			{
				return this._TBL_Branch.Entity;
			}
			set
			{
				TBL_Branch previousValue = this._TBL_Branch.Entity;
				if (((previousValue != value) 
							|| (this._TBL_Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_Branch.Entity = null;
						previousValue.Tbl_Users.Remove(this);
					}
					this._TBL_Branch.Entity = value;
					if ((value != null))
					{
						value.Tbl_Users.Add(this);
						this._Dept_ID = value.branchid;
					}
					else
					{
						this._Dept_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("TBL_Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_RoleResourcePermission")]
	public partial class Tbl_RoleResourcePermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Role_Resource_Permission_ID;
		
		private System.Nullable<long> _Resource_ID;
		
		private System.Nullable<long> _Role_ID;
		
		private System.Nullable<long> _Permission_ID;
		
		private System.Nullable<int> _Status;
		
		private EntityRef<Tbl_Permission> _Tbl_Permission;
		
		private EntityRef<Tbl_Role> _Tbl_Role;
		
		private EntityRef<Tbl_Resource> _Tbl_Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_Resource_Permission_IDChanging(long value);
    partial void OnRole_Resource_Permission_IDChanged();
    partial void OnResource_IDChanging(System.Nullable<long> value);
    partial void OnResource_IDChanged();
    partial void OnRole_IDChanging(System.Nullable<long> value);
    partial void OnRole_IDChanged();
    partial void OnPermission_IDChanging(System.Nullable<long> value);
    partial void OnPermission_IDChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Tbl_RoleResourcePermission()
		{
			this._Tbl_Permission = default(EntityRef<Tbl_Permission>);
			this._Tbl_Role = default(EntityRef<Tbl_Role>);
			this._Tbl_Resource = default(EntityRef<Tbl_Resource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Resource_Permission_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Role_Resource_Permission_ID
		{
			get
			{
				return this._Role_Resource_Permission_ID;
			}
			set
			{
				if ((this._Role_Resource_Permission_ID != value))
				{
					this.OnRole_Resource_Permission_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_Resource_Permission_ID = value;
					this.SendPropertyChanged("Role_Resource_Permission_ID");
					this.OnRole_Resource_Permission_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_ID", DbType="BigInt")]
		public System.Nullable<long> Resource_ID
		{
			get
			{
				return this._Resource_ID;
			}
			set
			{
				if ((this._Resource_ID != value))
				{
					if (this._Tbl_Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResource_IDChanging(value);
					this.SendPropertyChanging();
					this._Resource_ID = value;
					this.SendPropertyChanged("Resource_ID");
					this.OnResource_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", DbType="BigInt")]
		public System.Nullable<long> Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					if (this._Tbl_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permission_ID", DbType="BigInt")]
		public System.Nullable<long> Permission_ID
		{
			get
			{
				return this._Permission_ID;
			}
			set
			{
				if ((this._Permission_ID != value))
				{
					if (this._Tbl_Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermission_IDChanging(value);
					this.SendPropertyChanging();
					this._Permission_ID = value;
					this.SendPropertyChanged("Permission_ID");
					this.OnPermission_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Permission_Tbl_RoleResourcePermission", Storage="_Tbl_Permission", ThisKey="Permission_ID", OtherKey="Permission_ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Tbl_Permission Tbl_Permission
		{
			get
			{
				return this._Tbl_Permission.Entity;
			}
			set
			{
				Tbl_Permission previousValue = this._Tbl_Permission.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Permission.Entity = null;
						previousValue.Tbl_RoleResourcePermissions.Remove(this);
					}
					this._Tbl_Permission.Entity = value;
					if ((value != null))
					{
						value.Tbl_RoleResourcePermissions.Add(this);
						this._Permission_ID = value.Permission_ID;
					}
					else
					{
						this._Permission_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Tbl_Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Role_Tbl_RoleResourcePermission", Storage="_Tbl_Role", ThisKey="Role_ID", OtherKey="Role_ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Tbl_Role Tbl_Role
		{
			get
			{
				return this._Tbl_Role.Entity;
			}
			set
			{
				Tbl_Role previousValue = this._Tbl_Role.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Role.Entity = null;
						previousValue.Tbl_RoleResourcePermissions.Remove(this);
					}
					this._Tbl_Role.Entity = value;
					if ((value != null))
					{
						value.Tbl_RoleResourcePermissions.Add(this);
						this._Role_ID = value.Role_ID;
					}
					else
					{
						this._Role_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Tbl_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Resource_Tbl_RoleResourcePermission", Storage="_Tbl_Resource", ThisKey="Resource_ID", OtherKey="Resource_ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Tbl_Resource Tbl_Resource
		{
			get
			{
				return this._Tbl_Resource.Entity;
			}
			set
			{
				Tbl_Resource previousValue = this._Tbl_Resource.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Resource.Entity = null;
						previousValue.Tbl_RoleResourcePermissions.Remove(this);
					}
					this._Tbl_Resource.Entity = value;
					if ((value != null))
					{
						value.Tbl_RoleResourcePermissions.Add(this);
						this._Resource_ID = value.Resource_ID;
					}
					else
					{
						this._Resource_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Tbl_Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Resource")]
	public partial class Tbl_Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Resource_ID;
		
		private string _Resource_Name;
		
		private string _Resource_Path;
		
		private string _Description;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<Tbl_RoleResourcePermission> _Tbl_RoleResourcePermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResource_IDChanging(long value);
    partial void OnResource_IDChanged();
    partial void OnResource_NameChanging(string value);
    partial void OnResource_NameChanged();
    partial void OnResource_PathChanging(string value);
    partial void OnResource_PathChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Tbl_Resource()
		{
			this._Tbl_RoleResourcePermissions = new EntitySet<Tbl_RoleResourcePermission>(new Action<Tbl_RoleResourcePermission>(this.attach_Tbl_RoleResourcePermissions), new Action<Tbl_RoleResourcePermission>(this.detach_Tbl_RoleResourcePermissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Resource_ID
		{
			get
			{
				return this._Resource_ID;
			}
			set
			{
				if ((this._Resource_ID != value))
				{
					this.OnResource_IDChanging(value);
					this.SendPropertyChanging();
					this._Resource_ID = value;
					this.SendPropertyChanged("Resource_ID");
					this.OnResource_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_Name", DbType="NVarChar(50)")]
		public string Resource_Name
		{
			get
			{
				return this._Resource_Name;
			}
			set
			{
				if ((this._Resource_Name != value))
				{
					this.OnResource_NameChanging(value);
					this.SendPropertyChanging();
					this._Resource_Name = value;
					this.SendPropertyChanged("Resource_Name");
					this.OnResource_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_Path", DbType="NVarChar(50)")]
		public string Resource_Path
		{
			get
			{
				return this._Resource_Path;
			}
			set
			{
				if ((this._Resource_Path != value))
				{
					this.OnResource_PathChanging(value);
					this.SendPropertyChanging();
					this._Resource_Path = value;
					this.SendPropertyChanged("Resource_Path");
					this.OnResource_PathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Resource_Tbl_RoleResourcePermission", Storage="_Tbl_RoleResourcePermissions", ThisKey="Resource_ID", OtherKey="Resource_ID")]
		public EntitySet<Tbl_RoleResourcePermission> Tbl_RoleResourcePermissions
		{
			get
			{
				return this._Tbl_RoleResourcePermissions;
			}
			set
			{
				this._Tbl_RoleResourcePermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_RoleResourcePermissions(Tbl_RoleResourcePermission entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Resource = this;
		}
		
		private void detach_Tbl_RoleResourcePermissions(Tbl_RoleResourcePermission entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Resource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_CORRESPONDENT_CURRENCY")]
	public partial class TBL_CORRESPONDENT_CURRENCY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _corrCurrencyId;
		
		private int _currencyCorrID;
		
		private EntityRef<TBL_LC_CORRESPONDENT> _TBL_LC_CORRESPONDENT;
		
		private EntityRef<TBL_CURRENCY> _TBL_CURRENCY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncorrCurrencyIdChanging(int value);
    partial void OncorrCurrencyIdChanged();
    partial void OncurrencyCorrIDChanging(int value);
    partial void OncurrencyCorrIDChanged();
    #endregion
		
		public TBL_CORRESPONDENT_CURRENCY()
		{
			this._TBL_LC_CORRESPONDENT = default(EntityRef<TBL_LC_CORRESPONDENT>);
			this._TBL_CURRENCY = default(EntityRef<TBL_CURRENCY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corrCurrencyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int corrCurrencyId
		{
			get
			{
				return this._corrCurrencyId;
			}
			set
			{
				if ((this._corrCurrencyId != value))
				{
					if (this._TBL_LC_CORRESPONDENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncorrCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._corrCurrencyId = value;
					this.SendPropertyChanged("corrCurrencyId");
					this.OncorrCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyCorrID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int currencyCorrID
		{
			get
			{
				return this._currencyCorrID;
			}
			set
			{
				if ((this._currencyCorrID != value))
				{
					if (this._TBL_CURRENCY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncurrencyCorrIDChanging(value);
					this.SendPropertyChanging();
					this._currencyCorrID = value;
					this.SendPropertyChanged("currencyCorrID");
					this.OncurrencyCorrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_LC_CORRESPONDENT_TBL_CORRESPONDENT_CURRENCY", Storage="_TBL_LC_CORRESPONDENT", ThisKey="corrCurrencyId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TBL_LC_CORRESPONDENT TBL_LC_CORRESPONDENT
		{
			get
			{
				return this._TBL_LC_CORRESPONDENT.Entity;
			}
			set
			{
				TBL_LC_CORRESPONDENT previousValue = this._TBL_LC_CORRESPONDENT.Entity;
				if (((previousValue != value) 
							|| (this._TBL_LC_CORRESPONDENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_LC_CORRESPONDENT.Entity = null;
						previousValue.TBL_CORRESPONDENT_CURRENCies.Remove(this);
					}
					this._TBL_LC_CORRESPONDENT.Entity = value;
					if ((value != null))
					{
						value.TBL_CORRESPONDENT_CURRENCies.Add(this);
						this._corrCurrencyId = value.id;
					}
					else
					{
						this._corrCurrencyId = default(int);
					}
					this.SendPropertyChanged("TBL_LC_CORRESPONDENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_CURRENCY_TBL_CORRESPONDENT_CURRENCY", Storage="_TBL_CURRENCY", ThisKey="currencyCorrID", OtherKey="currencyId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TBL_CURRENCY TBL_CURRENCY
		{
			get
			{
				return this._TBL_CURRENCY.Entity;
			}
			set
			{
				TBL_CURRENCY previousValue = this._TBL_CURRENCY.Entity;
				if (((previousValue != value) 
							|| (this._TBL_CURRENCY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_CURRENCY.Entity = null;
						previousValue.TBL_CORRESPONDENT_CURRENCies.Remove(this);
					}
					this._TBL_CURRENCY.Entity = value;
					if ((value != null))
					{
						value.TBL_CORRESPONDENT_CURRENCies.Add(this);
						this._currencyCorrID = value.currencyId;
					}
					else
					{
						this._currencyCorrID = default(int);
					}
					this.SendPropertyChanged("TBL_CURRENCY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_COUNTRY")]
	public partial class TBL_COUNTRY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Country_Id;
		
		private string _Country_Name;
		
		private string _Country_Code;
		
		private EntitySet<TBL_OPEN_THROUGH_BANK> _TBL_OPEN_THROUGH_BANKs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountry_IdChanging(int value);
    partial void OnCountry_IdChanged();
    partial void OnCountry_NameChanging(string value);
    partial void OnCountry_NameChanged();
    partial void OnCountry_CodeChanging(string value);
    partial void OnCountry_CodeChanged();
    #endregion
		
		public TBL_COUNTRY()
		{
			this._TBL_OPEN_THROUGH_BANKs = new EntitySet<TBL_OPEN_THROUGH_BANK>(new Action<TBL_OPEN_THROUGH_BANK>(this.attach_TBL_OPEN_THROUGH_BANKs), new Action<TBL_OPEN_THROUGH_BANK>(this.detach_TBL_OPEN_THROUGH_BANKs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Country_Id
		{
			get
			{
				return this._Country_Id;
			}
			set
			{
				if ((this._Country_Id != value))
				{
					this.OnCountry_IdChanging(value);
					this.SendPropertyChanging();
					this._Country_Id = value;
					this.SendPropertyChanged("Country_Id");
					this.OnCountry_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Name", DbType="VarChar(50)")]
		public string Country_Name
		{
			get
			{
				return this._Country_Name;
			}
			set
			{
				if ((this._Country_Name != value))
				{
					this.OnCountry_NameChanging(value);
					this.SendPropertyChanging();
					this._Country_Name = value;
					this.SendPropertyChanged("Country_Name");
					this.OnCountry_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Code", DbType="VarChar(50)")]
		public string Country_Code
		{
			get
			{
				return this._Country_Code;
			}
			set
			{
				if ((this._Country_Code != value))
				{
					this.OnCountry_CodeChanging(value);
					this.SendPropertyChanging();
					this._Country_Code = value;
					this.SendPropertyChanged("Country_Code");
					this.OnCountry_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_COUNTRY_TBL_OPEN_THROUGH_BANK", Storage="_TBL_OPEN_THROUGH_BANKs", ThisKey="Country_Id", OtherKey="countryId")]
		public EntitySet<TBL_OPEN_THROUGH_BANK> TBL_OPEN_THROUGH_BANKs
		{
			get
			{
				return this._TBL_OPEN_THROUGH_BANKs;
			}
			set
			{
				this._TBL_OPEN_THROUGH_BANKs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_OPEN_THROUGH_BANKs(TBL_OPEN_THROUGH_BANK entity)
		{
			this.SendPropertyChanging();
			entity.TBL_COUNTRY = this;
		}
		
		private void detach_TBL_OPEN_THROUGH_BANKs(TBL_OPEN_THROUGH_BANK entity)
		{
			this.SendPropertyChanging();
			entity.TBL_COUNTRY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_LC_CORRESPONDENT")]
	public partial class TBL_LC_CORRESPONDENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _aibAcountNo;
		
		private string _correspondentName;
		
		private string _swiftId;
		
		private string _telephoneNo;
		
		private string _faxNumber;
		
		private EntitySet<TBL_CORRESPONDENT_CURRENCY> _TBL_CORRESPONDENT_CURRENCies;
		
		private EntitySet<TBL_LETTER_OF_CREDIT> _TBL_LETTER_OF_CREDITs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnaibAcountNoChanging(string value);
    partial void OnaibAcountNoChanged();
    partial void OncorrespondentNameChanging(string value);
    partial void OncorrespondentNameChanged();
    partial void OnswiftIdChanging(string value);
    partial void OnswiftIdChanged();
    partial void OntelephoneNoChanging(string value);
    partial void OntelephoneNoChanged();
    partial void OnfaxNumberChanging(string value);
    partial void OnfaxNumberChanged();
    #endregion
		
		public TBL_LC_CORRESPONDENT()
		{
			this._TBL_CORRESPONDENT_CURRENCies = new EntitySet<TBL_CORRESPONDENT_CURRENCY>(new Action<TBL_CORRESPONDENT_CURRENCY>(this.attach_TBL_CORRESPONDENT_CURRENCies), new Action<TBL_CORRESPONDENT_CURRENCY>(this.detach_TBL_CORRESPONDENT_CURRENCies));
			this._TBL_LETTER_OF_CREDITs = new EntitySet<TBL_LETTER_OF_CREDIT>(new Action<TBL_LETTER_OF_CREDIT>(this.attach_TBL_LETTER_OF_CREDITs), new Action<TBL_LETTER_OF_CREDIT>(this.detach_TBL_LETTER_OF_CREDITs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aibAcountNo", DbType="NVarChar(50)")]
		public string aibAcountNo
		{
			get
			{
				return this._aibAcountNo;
			}
			set
			{
				if ((this._aibAcountNo != value))
				{
					this.OnaibAcountNoChanging(value);
					this.SendPropertyChanging();
					this._aibAcountNo = value;
					this.SendPropertyChanged("aibAcountNo");
					this.OnaibAcountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correspondentName", DbType="NVarChar(50)")]
		public string correspondentName
		{
			get
			{
				return this._correspondentName;
			}
			set
			{
				if ((this._correspondentName != value))
				{
					this.OncorrespondentNameChanging(value);
					this.SendPropertyChanging();
					this._correspondentName = value;
					this.SendPropertyChanged("correspondentName");
					this.OncorrespondentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_swiftId", DbType="NVarChar(50)")]
		public string swiftId
		{
			get
			{
				return this._swiftId;
			}
			set
			{
				if ((this._swiftId != value))
				{
					this.OnswiftIdChanging(value);
					this.SendPropertyChanging();
					this._swiftId = value;
					this.SendPropertyChanged("swiftId");
					this.OnswiftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephoneNo", DbType="NVarChar(50)")]
		public string telephoneNo
		{
			get
			{
				return this._telephoneNo;
			}
			set
			{
				if ((this._telephoneNo != value))
				{
					this.OntelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._telephoneNo = value;
					this.SendPropertyChanged("telephoneNo");
					this.OntelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_faxNumber", DbType="NVarChar(50)")]
		public string faxNumber
		{
			get
			{
				return this._faxNumber;
			}
			set
			{
				if ((this._faxNumber != value))
				{
					this.OnfaxNumberChanging(value);
					this.SendPropertyChanging();
					this._faxNumber = value;
					this.SendPropertyChanged("faxNumber");
					this.OnfaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_LC_CORRESPONDENT_TBL_CORRESPONDENT_CURRENCY", Storage="_TBL_CORRESPONDENT_CURRENCies", ThisKey="id", OtherKey="corrCurrencyId")]
		public EntitySet<TBL_CORRESPONDENT_CURRENCY> TBL_CORRESPONDENT_CURRENCies
		{
			get
			{
				return this._TBL_CORRESPONDENT_CURRENCies;
			}
			set
			{
				this._TBL_CORRESPONDENT_CURRENCies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_LC_CORRESPONDENT_TBL_LETTER_OF_CREDIT", Storage="_TBL_LETTER_OF_CREDITs", ThisKey="id", OtherKey="corespondenceID")]
		public EntitySet<TBL_LETTER_OF_CREDIT> TBL_LETTER_OF_CREDITs
		{
			get
			{
				return this._TBL_LETTER_OF_CREDITs;
			}
			set
			{
				this._TBL_LETTER_OF_CREDITs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_CORRESPONDENT_CURRENCies(TBL_CORRESPONDENT_CURRENCY entity)
		{
			this.SendPropertyChanging();
			entity.TBL_LC_CORRESPONDENT = this;
		}
		
		private void detach_TBL_CORRESPONDENT_CURRENCies(TBL_CORRESPONDENT_CURRENCY entity)
		{
			this.SendPropertyChanging();
			entity.TBL_LC_CORRESPONDENT = null;
		}
		
		private void attach_TBL_LETTER_OF_CREDITs(TBL_LETTER_OF_CREDIT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_LC_CORRESPONDENT = this;
		}
		
		private void detach_TBL_LETTER_OF_CREDITs(TBL_LETTER_OF_CREDIT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_LC_CORRESPONDENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_CURRENCY")]
	public partial class TBL_CURRENCY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _currencyId;
		
		private string _currencyName;
		
		private EntitySet<TBL_CORRESPONDENT_CURRENCY> _TBL_CORRESPONDENT_CURRENCies;
		
		private EntitySet<TBL_LC_PAYMENT_TYPE> _TBL_LC_PAYMENT_TYPEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncurrencyIdChanging(int value);
    partial void OncurrencyIdChanged();
    partial void OncurrencyNameChanging(string value);
    partial void OncurrencyNameChanged();
    #endregion
		
		public TBL_CURRENCY()
		{
			this._TBL_CORRESPONDENT_CURRENCies = new EntitySet<TBL_CORRESPONDENT_CURRENCY>(new Action<TBL_CORRESPONDENT_CURRENCY>(this.attach_TBL_CORRESPONDENT_CURRENCies), new Action<TBL_CORRESPONDENT_CURRENCY>(this.detach_TBL_CORRESPONDENT_CURRENCies));
			this._TBL_LC_PAYMENT_TYPEs = new EntitySet<TBL_LC_PAYMENT_TYPE>(new Action<TBL_LC_PAYMENT_TYPE>(this.attach_TBL_LC_PAYMENT_TYPEs), new Action<TBL_LC_PAYMENT_TYPE>(this.detach_TBL_LC_PAYMENT_TYPEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int currencyId
		{
			get
			{
				return this._currencyId;
			}
			set
			{
				if ((this._currencyId != value))
				{
					this.OncurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._currencyId = value;
					this.SendPropertyChanged("currencyId");
					this.OncurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyName", DbType="NVarChar(50)")]
		public string currencyName
		{
			get
			{
				return this._currencyName;
			}
			set
			{
				if ((this._currencyName != value))
				{
					this.OncurrencyNameChanging(value);
					this.SendPropertyChanging();
					this._currencyName = value;
					this.SendPropertyChanged("currencyName");
					this.OncurrencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_CURRENCY_TBL_CORRESPONDENT_CURRENCY", Storage="_TBL_CORRESPONDENT_CURRENCies", ThisKey="currencyId", OtherKey="currencyCorrID")]
		public EntitySet<TBL_CORRESPONDENT_CURRENCY> TBL_CORRESPONDENT_CURRENCies
		{
			get
			{
				return this._TBL_CORRESPONDENT_CURRENCies;
			}
			set
			{
				this._TBL_CORRESPONDENT_CURRENCies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_CURRENCY_TBL_LC_PAYMENT_TYPE", Storage="_TBL_LC_PAYMENT_TYPEs", ThisKey="currencyId", OtherKey="currId")]
		public EntitySet<TBL_LC_PAYMENT_TYPE> TBL_LC_PAYMENT_TYPEs
		{
			get
			{
				return this._TBL_LC_PAYMENT_TYPEs;
			}
			set
			{
				this._TBL_LC_PAYMENT_TYPEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_CORRESPONDENT_CURRENCies(TBL_CORRESPONDENT_CURRENCY entity)
		{
			this.SendPropertyChanging();
			entity.TBL_CURRENCY = this;
		}
		
		private void detach_TBL_CORRESPONDENT_CURRENCies(TBL_CORRESPONDENT_CURRENCY entity)
		{
			this.SendPropertyChanging();
			entity.TBL_CURRENCY = null;
		}
		
		private void attach_TBL_LC_PAYMENT_TYPEs(TBL_LC_PAYMENT_TYPE entity)
		{
			this.SendPropertyChanging();
			entity.TBL_CURRENCY = this;
		}
		
		private void detach_TBL_LC_PAYMENT_TYPEs(TBL_LC_PAYMENT_TYPE entity)
		{
			this.SendPropertyChanging();
			entity.TBL_CURRENCY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_AIB_CURRENCY_RATE")]
	public partial class TBL_AIB_CURRENCY_RATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _fromCurrencyCode;
		
		private string _toCurrencyCode;
		
		private string _exchangeRateType;
		
		private System.Nullable<double> _currencyRate;
		
		private System.Nullable<System.DateTime> _valueDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfromCurrencyCodeChanging(string value);
    partial void OnfromCurrencyCodeChanged();
    partial void OntoCurrencyCodeChanging(string value);
    partial void OntoCurrencyCodeChanged();
    partial void OnexchangeRateTypeChanging(string value);
    partial void OnexchangeRateTypeChanged();
    partial void OncurrencyRateChanging(System.Nullable<double> value);
    partial void OncurrencyRateChanged();
    partial void OnvalueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnvalueDateChanged();
    #endregion
		
		public TBL_AIB_CURRENCY_RATE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromCurrencyCode", DbType="NVarChar(50)")]
		public string fromCurrencyCode
		{
			get
			{
				return this._fromCurrencyCode;
			}
			set
			{
				if ((this._fromCurrencyCode != value))
				{
					this.OnfromCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._fromCurrencyCode = value;
					this.SendPropertyChanged("fromCurrencyCode");
					this.OnfromCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toCurrencyCode", DbType="NVarChar(50)")]
		public string toCurrencyCode
		{
			get
			{
				return this._toCurrencyCode;
			}
			set
			{
				if ((this._toCurrencyCode != value))
				{
					this.OntoCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._toCurrencyCode = value;
					this.SendPropertyChanged("toCurrencyCode");
					this.OntoCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exchangeRateType", DbType="NVarChar(50)")]
		public string exchangeRateType
		{
			get
			{
				return this._exchangeRateType;
			}
			set
			{
				if ((this._exchangeRateType != value))
				{
					this.OnexchangeRateTypeChanging(value);
					this.SendPropertyChanging();
					this._exchangeRateType = value;
					this.SendPropertyChanged("exchangeRateType");
					this.OnexchangeRateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyRate", DbType="Float")]
		public System.Nullable<double> currencyRate
		{
			get
			{
				return this._currencyRate;
			}
			set
			{
				if ((this._currencyRate != value))
				{
					this.OncurrencyRateChanging(value);
					this.SendPropertyChanging();
					this._currencyRate = value;
					this.SendPropertyChanged("currencyRate");
					this.OncurrencyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valueDate", DbType="Date")]
		public System.Nullable<System.DateTime> valueDate
		{
			get
			{
				return this._valueDate;
			}
			set
			{
				if ((this._valueDate != value))
				{
					this.OnvalueDateChanging(value);
					this.SendPropertyChanging();
					this._valueDate = value;
					this.SendPropertyChanged("valueDate");
					this.OnvalueDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_Branch")]
	public partial class TBL_Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _branchid;
		
		private string _branchName;
		
		private string _branchAbrivation;
		
		private string _permitAbrivation;
		
		private string _branchCode;
		
		private EntitySet<Tbl_User> _Tbl_Users;
		
		private EntitySet<TBL_LETTER_OF_CREDIT> _TBL_LETTER_OF_CREDITs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbranchidChanging(long value);
    partial void OnbranchidChanged();
    partial void OnbranchNameChanging(string value);
    partial void OnbranchNameChanged();
    partial void OnbranchAbrivationChanging(string value);
    partial void OnbranchAbrivationChanged();
    partial void OnpermitAbrivationChanging(string value);
    partial void OnpermitAbrivationChanged();
    partial void OnbranchCodeChanging(string value);
    partial void OnbranchCodeChanged();
    #endregion
		
		public TBL_Branch()
		{
			this._Tbl_Users = new EntitySet<Tbl_User>(new Action<Tbl_User>(this.attach_Tbl_Users), new Action<Tbl_User>(this.detach_Tbl_Users));
			this._TBL_LETTER_OF_CREDITs = new EntitySet<TBL_LETTER_OF_CREDIT>(new Action<TBL_LETTER_OF_CREDIT>(this.attach_TBL_LETTER_OF_CREDITs), new Action<TBL_LETTER_OF_CREDIT>(this.detach_TBL_LETTER_OF_CREDITs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long branchid
		{
			get
			{
				return this._branchid;
			}
			set
			{
				if ((this._branchid != value))
				{
					this.OnbranchidChanging(value);
					this.SendPropertyChanging();
					this._branchid = value;
					this.SendPropertyChanged("branchid");
					this.OnbranchidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchName", DbType="NVarChar(50)")]
		public string branchName
		{
			get
			{
				return this._branchName;
			}
			set
			{
				if ((this._branchName != value))
				{
					this.OnbranchNameChanging(value);
					this.SendPropertyChanging();
					this._branchName = value;
					this.SendPropertyChanged("branchName");
					this.OnbranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchAbrivation", DbType="NVarChar(50)")]
		public string branchAbrivation
		{
			get
			{
				return this._branchAbrivation;
			}
			set
			{
				if ((this._branchAbrivation != value))
				{
					this.OnbranchAbrivationChanging(value);
					this.SendPropertyChanging();
					this._branchAbrivation = value;
					this.SendPropertyChanged("branchAbrivation");
					this.OnbranchAbrivationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitAbrivation", DbType="NVarChar(50)")]
		public string permitAbrivation
		{
			get
			{
				return this._permitAbrivation;
			}
			set
			{
				if ((this._permitAbrivation != value))
				{
					this.OnpermitAbrivationChanging(value);
					this.SendPropertyChanging();
					this._permitAbrivation = value;
					this.SendPropertyChanged("permitAbrivation");
					this.OnpermitAbrivationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchCode", DbType="NVarChar(50)")]
		public string branchCode
		{
			get
			{
				return this._branchCode;
			}
			set
			{
				if ((this._branchCode != value))
				{
					this.OnbranchCodeChanging(value);
					this.SendPropertyChanging();
					this._branchCode = value;
					this.SendPropertyChanged("branchCode");
					this.OnbranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Branch_Tbl_User", Storage="_Tbl_Users", ThisKey="branchid", OtherKey="Dept_ID")]
		public EntitySet<Tbl_User> Tbl_Users
		{
			get
			{
				return this._Tbl_Users;
			}
			set
			{
				this._Tbl_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Branch_TBL_LETTER_OF_CREDIT", Storage="_TBL_LETTER_OF_CREDITs", ThisKey="branchid", OtherKey="branchCode")]
		public EntitySet<TBL_LETTER_OF_CREDIT> TBL_LETTER_OF_CREDITs
		{
			get
			{
				return this._TBL_LETTER_OF_CREDITs;
			}
			set
			{
				this._TBL_LETTER_OF_CREDITs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Users(Tbl_User entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Branch = this;
		}
		
		private void detach_Tbl_Users(Tbl_User entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Branch = null;
		}
		
		private void attach_TBL_LETTER_OF_CREDITs(TBL_LETTER_OF_CREDIT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Branch = this;
		}
		
		private void detach_TBL_LETTER_OF_CREDITs(TBL_LETTER_OF_CREDIT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Branch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_OPEN_THROUGH_BANK")]
	public partial class TBL_OPEN_THROUGH_BANK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _opId;
		
		private string _bankName;
		
		private string _bankCode;
		
		private System.Nullable<int> _countryId;
		
		private string _city;
		
		private EntitySet<TBL_LETTER_OF_CREDIT> _TBL_LETTER_OF_CREDITs;
		
		private EntityRef<TBL_COUNTRY> _TBL_COUNTRY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnopIdChanging(int value);
    partial void OnopIdChanged();
    partial void OnbankNameChanging(string value);
    partial void OnbankNameChanged();
    partial void OnbankCodeChanging(string value);
    partial void OnbankCodeChanged();
    partial void OncountryIdChanging(System.Nullable<int> value);
    partial void OncountryIdChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    #endregion
		
		public TBL_OPEN_THROUGH_BANK()
		{
			this._TBL_LETTER_OF_CREDITs = new EntitySet<TBL_LETTER_OF_CREDIT>(new Action<TBL_LETTER_OF_CREDIT>(this.attach_TBL_LETTER_OF_CREDITs), new Action<TBL_LETTER_OF_CREDIT>(this.detach_TBL_LETTER_OF_CREDITs));
			this._TBL_COUNTRY = default(EntityRef<TBL_COUNTRY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int opId
		{
			get
			{
				return this._opId;
			}
			set
			{
				if ((this._opId != value))
				{
					this.OnopIdChanging(value);
					this.SendPropertyChanging();
					this._opId = value;
					this.SendPropertyChanged("opId");
					this.OnopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankName", DbType="NVarChar(255)")]
		public string bankName
		{
			get
			{
				return this._bankName;
			}
			set
			{
				if ((this._bankName != value))
				{
					this.OnbankNameChanging(value);
					this.SendPropertyChanging();
					this._bankName = value;
					this.SendPropertyChanged("bankName");
					this.OnbankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankCode", DbType="NVarChar(50)")]
		public string bankCode
		{
			get
			{
				return this._bankCode;
			}
			set
			{
				if ((this._bankCode != value))
				{
					this.OnbankCodeChanging(value);
					this.SendPropertyChanging();
					this._bankCode = value;
					this.SendPropertyChanged("bankCode");
					this.OnbankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryId", DbType="Int")]
		public System.Nullable<int> countryId
		{
			get
			{
				return this._countryId;
			}
			set
			{
				if ((this._countryId != value))
				{
					if (this._TBL_COUNTRY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryIdChanging(value);
					this.SendPropertyChanging();
					this._countryId = value;
					this.SendPropertyChanged("countryId");
					this.OncountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_OPEN_THROUGH_BANK_TBL_LETTER_OF_CREDIT", Storage="_TBL_LETTER_OF_CREDITs", ThisKey="opId", OtherKey="openThroughId")]
		public EntitySet<TBL_LETTER_OF_CREDIT> TBL_LETTER_OF_CREDITs
		{
			get
			{
				return this._TBL_LETTER_OF_CREDITs;
			}
			set
			{
				this._TBL_LETTER_OF_CREDITs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_COUNTRY_TBL_OPEN_THROUGH_BANK", Storage="_TBL_COUNTRY", ThisKey="countryId", OtherKey="Country_Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TBL_COUNTRY TBL_COUNTRY
		{
			get
			{
				return this._TBL_COUNTRY.Entity;
			}
			set
			{
				TBL_COUNTRY previousValue = this._TBL_COUNTRY.Entity;
				if (((previousValue != value) 
							|| (this._TBL_COUNTRY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_COUNTRY.Entity = null;
						previousValue.TBL_OPEN_THROUGH_BANKs.Remove(this);
					}
					this._TBL_COUNTRY.Entity = value;
					if ((value != null))
					{
						value.TBL_OPEN_THROUGH_BANKs.Add(this);
						this._countryId = value.Country_Id;
					}
					else
					{
						this._countryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBL_COUNTRY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_LETTER_OF_CREDITs(TBL_LETTER_OF_CREDIT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_OPEN_THROUGH_BANK = this;
		}
		
		private void detach_TBL_LETTER_OF_CREDITs(TBL_LETTER_OF_CREDIT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_OPEN_THROUGH_BANK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VW_CORRESPONDNCE_CURRENCY")]
	public partial class VW_CORRESPONDNCE_CURRENCY
	{
		
		private int _id;
		
		private string _correspondentName;
		
		private string _aibAcountNo;
		
		private int _currencyId;
		
		private string _currencyName;
		
		private string _telephoneNo;
		
		private string _faxNumber;
		
		private string _aibAccountNumber;
		
		public VW_CORRESPONDNCE_CURRENCY()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correspondentName", DbType="NVarChar(50)")]
		public string correspondentName
		{
			get
			{
				return this._correspondentName;
			}
			set
			{
				if ((this._correspondentName != value))
				{
					this._correspondentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aibAcountNo", DbType="NVarChar(50)")]
		public string aibAcountNo
		{
			get
			{
				return this._aibAcountNo;
			}
			set
			{
				if ((this._aibAcountNo != value))
				{
					this._aibAcountNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyId", DbType="Int NOT NULL")]
		public int currencyId
		{
			get
			{
				return this._currencyId;
			}
			set
			{
				if ((this._currencyId != value))
				{
					this._currencyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyName", DbType="NVarChar(50)")]
		public string currencyName
		{
			get
			{
				return this._currencyName;
			}
			set
			{
				if ((this._currencyName != value))
				{
					this._currencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephoneNo", DbType="NVarChar(50)")]
		public string telephoneNo
		{
			get
			{
				return this._telephoneNo;
			}
			set
			{
				if ((this._telephoneNo != value))
				{
					this._telephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_faxNumber", DbType="NVarChar(50)")]
		public string faxNumber
		{
			get
			{
				return this._faxNumber;
			}
			set
			{
				if ((this._faxNumber != value))
				{
					this._faxNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aibAccountNumber", DbType="NVarChar(255)")]
		public string aibAccountNumber
		{
			get
			{
				return this._aibAccountNumber;
			}
			set
			{
				if ((this._aibAccountNumber != value))
				{
					this._aibAccountNumber = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_LC_PAYMENT_TYPE")]
	public partial class TBL_LC_PAYMENT_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _paymentTypeName;
		
		private string _typeCode;
		
		private System.Nullable<double> _minimumTarif;
		
		private System.Nullable<double> _maximumTarif;
		
		private System.Nullable<double> _lowerTarifPercent;
		
		private System.Nullable<double> _middleTarifPercent;
		
		private System.Nullable<double> _upperTarifPercent;
		
		private string _unit;
		
		private System.Nullable<int> _currId;
		
		private EntityRef<TBL_CURRENCY> _TBL_CURRENCY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpaymentTypeNameChanging(string value);
    partial void OnpaymentTypeNameChanged();
    partial void OntypeCodeChanging(string value);
    partial void OntypeCodeChanged();
    partial void OnminimumTarifChanging(System.Nullable<double> value);
    partial void OnminimumTarifChanged();
    partial void OnmaximumTarifChanging(System.Nullable<double> value);
    partial void OnmaximumTarifChanged();
    partial void OnlowerTarifPercentChanging(System.Nullable<double> value);
    partial void OnlowerTarifPercentChanged();
    partial void OnmiddleTarifPercentChanging(System.Nullable<double> value);
    partial void OnmiddleTarifPercentChanged();
    partial void OnupperTarifPercentChanging(System.Nullable<double> value);
    partial void OnupperTarifPercentChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    partial void OncurrIdChanging(System.Nullable<int> value);
    partial void OncurrIdChanged();
    #endregion
		
		public TBL_LC_PAYMENT_TYPE()
		{
			this._TBL_CURRENCY = default(EntityRef<TBL_CURRENCY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentTypeName", DbType="NVarChar(255)")]
		public string paymentTypeName
		{
			get
			{
				return this._paymentTypeName;
			}
			set
			{
				if ((this._paymentTypeName != value))
				{
					this.OnpaymentTypeNameChanging(value);
					this.SendPropertyChanging();
					this._paymentTypeName = value;
					this.SendPropertyChanged("paymentTypeName");
					this.OnpaymentTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeCode", DbType="NVarChar(50)")]
		public string typeCode
		{
			get
			{
				return this._typeCode;
			}
			set
			{
				if ((this._typeCode != value))
				{
					this.OntypeCodeChanging(value);
					this.SendPropertyChanging();
					this._typeCode = value;
					this.SendPropertyChanged("typeCode");
					this.OntypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minimumTarif", DbType="Float")]
		public System.Nullable<double> minimumTarif
		{
			get
			{
				return this._minimumTarif;
			}
			set
			{
				if ((this._minimumTarif != value))
				{
					this.OnminimumTarifChanging(value);
					this.SendPropertyChanging();
					this._minimumTarif = value;
					this.SendPropertyChanged("minimumTarif");
					this.OnminimumTarifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maximumTarif", DbType="Float")]
		public System.Nullable<double> maximumTarif
		{
			get
			{
				return this._maximumTarif;
			}
			set
			{
				if ((this._maximumTarif != value))
				{
					this.OnmaximumTarifChanging(value);
					this.SendPropertyChanging();
					this._maximumTarif = value;
					this.SendPropertyChanged("maximumTarif");
					this.OnmaximumTarifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lowerTarifPercent", DbType="Float")]
		public System.Nullable<double> lowerTarifPercent
		{
			get
			{
				return this._lowerTarifPercent;
			}
			set
			{
				if ((this._lowerTarifPercent != value))
				{
					this.OnlowerTarifPercentChanging(value);
					this.SendPropertyChanging();
					this._lowerTarifPercent = value;
					this.SendPropertyChanged("lowerTarifPercent");
					this.OnlowerTarifPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_middleTarifPercent", DbType="Float")]
		public System.Nullable<double> middleTarifPercent
		{
			get
			{
				return this._middleTarifPercent;
			}
			set
			{
				if ((this._middleTarifPercent != value))
				{
					this.OnmiddleTarifPercentChanging(value);
					this.SendPropertyChanging();
					this._middleTarifPercent = value;
					this.SendPropertyChanged("middleTarifPercent");
					this.OnmiddleTarifPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upperTarifPercent", DbType="Float")]
		public System.Nullable<double> upperTarifPercent
		{
			get
			{
				return this._upperTarifPercent;
			}
			set
			{
				if ((this._upperTarifPercent != value))
				{
					this.OnupperTarifPercentChanging(value);
					this.SendPropertyChanging();
					this._upperTarifPercent = value;
					this.SendPropertyChanged("upperTarifPercent");
					this.OnupperTarifPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit", DbType="NVarChar(50)")]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currId", DbType="Int")]
		public System.Nullable<int> currId
		{
			get
			{
				return this._currId;
			}
			set
			{
				if ((this._currId != value))
				{
					if (this._TBL_CURRENCY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncurrIdChanging(value);
					this.SendPropertyChanging();
					this._currId = value;
					this.SendPropertyChanged("currId");
					this.OncurrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_CURRENCY_TBL_LC_PAYMENT_TYPE", Storage="_TBL_CURRENCY", ThisKey="currId", OtherKey="currencyId", IsForeignKey=true, DeleteRule="CASCADE")]
		public TBL_CURRENCY TBL_CURRENCY
		{
			get
			{
				return this._TBL_CURRENCY.Entity;
			}
			set
			{
				TBL_CURRENCY previousValue = this._TBL_CURRENCY.Entity;
				if (((previousValue != value) 
							|| (this._TBL_CURRENCY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_CURRENCY.Entity = null;
						previousValue.TBL_LC_PAYMENT_TYPEs.Remove(this);
					}
					this._TBL_CURRENCY.Entity = value;
					if ((value != null))
					{
						value.TBL_LC_PAYMENT_TYPEs.Add(this);
						this._currId = value.currencyId;
					}
					else
					{
						this._currId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBL_CURRENCY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_LETTER_OF_CREDIT")]
	public partial class TBL_LETTER_OF_CREDIT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _lcNumber;
		
		private System.Nullable<int> _lcCode;
		
		private System.Nullable<System.DateTime> _valueDate;
		
		private string _permitCode;
		
		private System.Nullable<int> _permitYear;
		
		private System.Nullable<double> _lcValue;
		
		private string _openingCurrency;
		
		private System.Nullable<double> _lcOpeningCurrencyRate;
		
		private System.Nullable<double> _marginPaid;
		
		private System.Nullable<int> _corespondenceID;
		
		private System.Nullable<int> _openThroughId;
		
		private string _supplyerName;
		
		private string _customerAccount;
		
		private string _customerName;
		
		private System.Nullable<long> _branchCode;
		
		private string _lcStatus;
		
		private System.Nullable<System.DateTime> _lcOpeningDate;
		
		private string _confirmationStratus;
		
		private string _currencyType;
		
		private System.Nullable<double> _tollerance;
		
		private System.Nullable<double> _totalInvoiceValue;
		
		private string _accountBranch;
		
		private EntitySet<TBL_LC_EXCESS_AMOUNT> _TBL_LC_EXCESS_AMOUNTs;
		
		private EntitySet<TBL_LC_INCREMENT> _TBL_LC_INCREMENTs;
		
		private EntitySet<TBL_LC_EXTENTION> _TBL_LC_EXTENTIONs;
		
		private EntitySet<TBL_INVOICE> _TBL_INVOICEs;
		
		private EntityRef<TBL_Branch> _TBL_Branch;
		
		private EntityRef<TBL_LC_CORRESPONDENT> _TBL_LC_CORRESPONDENT;
		
		private EntityRef<TBL_OPEN_THROUGH_BANK> _TBL_OPEN_THROUGH_BANK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlcNumberChanging(string value);
    partial void OnlcNumberChanged();
    partial void OnlcCodeChanging(System.Nullable<int> value);
    partial void OnlcCodeChanged();
    partial void OnvalueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnvalueDateChanged();
    partial void OnpermitCodeChanging(string value);
    partial void OnpermitCodeChanged();
    partial void OnpermitYearChanging(System.Nullable<int> value);
    partial void OnpermitYearChanged();
    partial void OnlcValueChanging(System.Nullable<double> value);
    partial void OnlcValueChanged();
    partial void OnopeningCurrencyChanging(string value);
    partial void OnopeningCurrencyChanged();
    partial void OnlcOpeningCurrencyRateChanging(System.Nullable<double> value);
    partial void OnlcOpeningCurrencyRateChanged();
    partial void OnmarginPaidChanging(System.Nullable<double> value);
    partial void OnmarginPaidChanged();
    partial void OncorespondenceIDChanging(System.Nullable<int> value);
    partial void OncorespondenceIDChanged();
    partial void OnopenThroughIdChanging(System.Nullable<int> value);
    partial void OnopenThroughIdChanged();
    partial void OnsupplyerNameChanging(string value);
    partial void OnsupplyerNameChanged();
    partial void OncustomerAccountChanging(string value);
    partial void OncustomerAccountChanged();
    partial void OncustomerNameChanging(string value);
    partial void OncustomerNameChanged();
    partial void OnbranchCodeChanging(System.Nullable<long> value);
    partial void OnbranchCodeChanged();
    partial void OnlcStatusChanging(string value);
    partial void OnlcStatusChanged();
    partial void OnlcOpeningDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlcOpeningDateChanged();
    partial void OnconfirmationStratusChanging(string value);
    partial void OnconfirmationStratusChanged();
    partial void OncurrencyTypeChanging(string value);
    partial void OncurrencyTypeChanged();
    partial void OntolleranceChanging(System.Nullable<double> value);
    partial void OntolleranceChanged();
    partial void OntotalInvoiceValueChanging(System.Nullable<double> value);
    partial void OntotalInvoiceValueChanged();
    partial void OnaccountBranchChanging(string value);
    partial void OnaccountBranchChanged();
    #endregion
		
		public TBL_LETTER_OF_CREDIT()
		{
			this._TBL_LC_EXCESS_AMOUNTs = new EntitySet<TBL_LC_EXCESS_AMOUNT>(new Action<TBL_LC_EXCESS_AMOUNT>(this.attach_TBL_LC_EXCESS_AMOUNTs), new Action<TBL_LC_EXCESS_AMOUNT>(this.detach_TBL_LC_EXCESS_AMOUNTs));
			this._TBL_LC_INCREMENTs = new EntitySet<TBL_LC_INCREMENT>(new Action<TBL_LC_INCREMENT>(this.attach_TBL_LC_INCREMENTs), new Action<TBL_LC_INCREMENT>(this.detach_TBL_LC_INCREMENTs));
			this._TBL_LC_EXTENTIONs = new EntitySet<TBL_LC_EXTENTION>(new Action<TBL_LC_EXTENTION>(this.attach_TBL_LC_EXTENTIONs), new Action<TBL_LC_EXTENTION>(this.detach_TBL_LC_EXTENTIONs));
			this._TBL_INVOICEs = new EntitySet<TBL_INVOICE>(new Action<TBL_INVOICE>(this.attach_TBL_INVOICEs), new Action<TBL_INVOICE>(this.detach_TBL_INVOICEs));
			this._TBL_Branch = default(EntityRef<TBL_Branch>);
			this._TBL_LC_CORRESPONDENT = default(EntityRef<TBL_LC_CORRESPONDENT>);
			this._TBL_OPEN_THROUGH_BANK = default(EntityRef<TBL_OPEN_THROUGH_BANK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string lcNumber
		{
			get
			{
				return this._lcNumber;
			}
			set
			{
				if ((this._lcNumber != value))
				{
					this.OnlcNumberChanging(value);
					this.SendPropertyChanging();
					this._lcNumber = value;
					this.SendPropertyChanged("lcNumber");
					this.OnlcNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcCode", DbType="Int")]
		public System.Nullable<int> lcCode
		{
			get
			{
				return this._lcCode;
			}
			set
			{
				if ((this._lcCode != value))
				{
					this.OnlcCodeChanging(value);
					this.SendPropertyChanging();
					this._lcCode = value;
					this.SendPropertyChanged("lcCode");
					this.OnlcCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> valueDate
		{
			get
			{
				return this._valueDate;
			}
			set
			{
				if ((this._valueDate != value))
				{
					this.OnvalueDateChanging(value);
					this.SendPropertyChanging();
					this._valueDate = value;
					this.SendPropertyChanged("valueDate");
					this.OnvalueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitCode", DbType="NVarChar(50)")]
		public string permitCode
		{
			get
			{
				return this._permitCode;
			}
			set
			{
				if ((this._permitCode != value))
				{
					this.OnpermitCodeChanging(value);
					this.SendPropertyChanging();
					this._permitCode = value;
					this.SendPropertyChanged("permitCode");
					this.OnpermitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitYear", DbType="Int")]
		public System.Nullable<int> permitYear
		{
			get
			{
				return this._permitYear;
			}
			set
			{
				if ((this._permitYear != value))
				{
					this.OnpermitYearChanging(value);
					this.SendPropertyChanging();
					this._permitYear = value;
					this.SendPropertyChanged("permitYear");
					this.OnpermitYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcValue", DbType="Float")]
		public System.Nullable<double> lcValue
		{
			get
			{
				return this._lcValue;
			}
			set
			{
				if ((this._lcValue != value))
				{
					this.OnlcValueChanging(value);
					this.SendPropertyChanging();
					this._lcValue = value;
					this.SendPropertyChanged("lcValue");
					this.OnlcValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openingCurrency", DbType="NVarChar(50)")]
		public string openingCurrency
		{
			get
			{
				return this._openingCurrency;
			}
			set
			{
				if ((this._openingCurrency != value))
				{
					this.OnopeningCurrencyChanging(value);
					this.SendPropertyChanging();
					this._openingCurrency = value;
					this.SendPropertyChanged("openingCurrency");
					this.OnopeningCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcOpeningCurrencyRate", DbType="Float")]
		public System.Nullable<double> lcOpeningCurrencyRate
		{
			get
			{
				return this._lcOpeningCurrencyRate;
			}
			set
			{
				if ((this._lcOpeningCurrencyRate != value))
				{
					this.OnlcOpeningCurrencyRateChanging(value);
					this.SendPropertyChanging();
					this._lcOpeningCurrencyRate = value;
					this.SendPropertyChanged("lcOpeningCurrencyRate");
					this.OnlcOpeningCurrencyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marginPaid", DbType="Float")]
		public System.Nullable<double> marginPaid
		{
			get
			{
				return this._marginPaid;
			}
			set
			{
				if ((this._marginPaid != value))
				{
					this.OnmarginPaidChanging(value);
					this.SendPropertyChanging();
					this._marginPaid = value;
					this.SendPropertyChanged("marginPaid");
					this.OnmarginPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corespondenceID", DbType="Int")]
		public System.Nullable<int> corespondenceID
		{
			get
			{
				return this._corespondenceID;
			}
			set
			{
				if ((this._corespondenceID != value))
				{
					if (this._TBL_LC_CORRESPONDENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncorespondenceIDChanging(value);
					this.SendPropertyChanging();
					this._corespondenceID = value;
					this.SendPropertyChanged("corespondenceID");
					this.OncorespondenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openThroughId", DbType="Int")]
		public System.Nullable<int> openThroughId
		{
			get
			{
				return this._openThroughId;
			}
			set
			{
				if ((this._openThroughId != value))
				{
					if (this._TBL_OPEN_THROUGH_BANK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnopenThroughIdChanging(value);
					this.SendPropertyChanging();
					this._openThroughId = value;
					this.SendPropertyChanged("openThroughId");
					this.OnopenThroughIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplyerName", DbType="NVarChar(255)")]
		public string supplyerName
		{
			get
			{
				return this._supplyerName;
			}
			set
			{
				if ((this._supplyerName != value))
				{
					this.OnsupplyerNameChanging(value);
					this.SendPropertyChanging();
					this._supplyerName = value;
					this.SendPropertyChanged("supplyerName");
					this.OnsupplyerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerAccount", DbType="NVarChar(50)")]
		public string customerAccount
		{
			get
			{
				return this._customerAccount;
			}
			set
			{
				if ((this._customerAccount != value))
				{
					this.OncustomerAccountChanging(value);
					this.SendPropertyChanging();
					this._customerAccount = value;
					this.SendPropertyChanged("customerAccount");
					this.OncustomerAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerName", DbType="NVarChar(255)")]
		public string customerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this.OncustomerNameChanging(value);
					this.SendPropertyChanging();
					this._customerName = value;
					this.SendPropertyChanged("customerName");
					this.OncustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchCode", DbType="BigInt")]
		public System.Nullable<long> branchCode
		{
			get
			{
				return this._branchCode;
			}
			set
			{
				if ((this._branchCode != value))
				{
					if (this._TBL_Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbranchCodeChanging(value);
					this.SendPropertyChanging();
					this._branchCode = value;
					this.SendPropertyChanged("branchCode");
					this.OnbranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcStatus", DbType="NVarChar(50)")]
		public string lcStatus
		{
			get
			{
				return this._lcStatus;
			}
			set
			{
				if ((this._lcStatus != value))
				{
					this.OnlcStatusChanging(value);
					this.SendPropertyChanging();
					this._lcStatus = value;
					this.SendPropertyChanged("lcStatus");
					this.OnlcStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcOpeningDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lcOpeningDate
		{
			get
			{
				return this._lcOpeningDate;
			}
			set
			{
				if ((this._lcOpeningDate != value))
				{
					this.OnlcOpeningDateChanging(value);
					this.SendPropertyChanging();
					this._lcOpeningDate = value;
					this.SendPropertyChanged("lcOpeningDate");
					this.OnlcOpeningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmationStratus", DbType="NVarChar(50)")]
		public string confirmationStratus
		{
			get
			{
				return this._confirmationStratus;
			}
			set
			{
				if ((this._confirmationStratus != value))
				{
					this.OnconfirmationStratusChanging(value);
					this.SendPropertyChanging();
					this._confirmationStratus = value;
					this.SendPropertyChanged("confirmationStratus");
					this.OnconfirmationStratusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyType", DbType="NVarChar(50)")]
		public string currencyType
		{
			get
			{
				return this._currencyType;
			}
			set
			{
				if ((this._currencyType != value))
				{
					this.OncurrencyTypeChanging(value);
					this.SendPropertyChanging();
					this._currencyType = value;
					this.SendPropertyChanged("currencyType");
					this.OncurrencyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tollerance", DbType="Float")]
		public System.Nullable<double> tollerance
		{
			get
			{
				return this._tollerance;
			}
			set
			{
				if ((this._tollerance != value))
				{
					this.OntolleranceChanging(value);
					this.SendPropertyChanging();
					this._tollerance = value;
					this.SendPropertyChanged("tollerance");
					this.OntolleranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalInvoiceValue", DbType="Float")]
		public System.Nullable<double> totalInvoiceValue
		{
			get
			{
				return this._totalInvoiceValue;
			}
			set
			{
				if ((this._totalInvoiceValue != value))
				{
					this.OntotalInvoiceValueChanging(value);
					this.SendPropertyChanging();
					this._totalInvoiceValue = value;
					this.SendPropertyChanged("totalInvoiceValue");
					this.OntotalInvoiceValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountBranch", DbType="NVarChar(50)")]
		public string accountBranch
		{
			get
			{
				return this._accountBranch;
			}
			set
			{
				if ((this._accountBranch != value))
				{
					this.OnaccountBranchChanging(value);
					this.SendPropertyChanging();
					this._accountBranch = value;
					this.SendPropertyChanged("accountBranch");
					this.OnaccountBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_LETTER_OF_CREDIT_TBL_LC_EXCESS_AMOUNT", Storage="_TBL_LC_EXCESS_AMOUNTs", ThisKey="lcNumber", OtherKey="excessLCNumber")]
		public EntitySet<TBL_LC_EXCESS_AMOUNT> TBL_LC_EXCESS_AMOUNTs
		{
			get
			{
				return this._TBL_LC_EXCESS_AMOUNTs;
			}
			set
			{
				this._TBL_LC_EXCESS_AMOUNTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_LETTER_OF_CREDIT_TBL_LC_INCREMENT", Storage="_TBL_LC_INCREMENTs", ThisKey="lcNumber", OtherKey="increntLCNumber")]
		public EntitySet<TBL_LC_INCREMENT> TBL_LC_INCREMENTs
		{
			get
			{
				return this._TBL_LC_INCREMENTs;
			}
			set
			{
				this._TBL_LC_INCREMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_LETTER_OF_CREDIT_TBL_LC_EXTENTION", Storage="_TBL_LC_EXTENTIONs", ThisKey="lcNumber", OtherKey="extLcNumber")]
		public EntitySet<TBL_LC_EXTENTION> TBL_LC_EXTENTIONs
		{
			get
			{
				return this._TBL_LC_EXTENTIONs;
			}
			set
			{
				this._TBL_LC_EXTENTIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_LETTER_OF_CREDIT_TBL_INVOICE", Storage="_TBL_INVOICEs", ThisKey="lcNumber", OtherKey="invoiceLCNumber")]
		public EntitySet<TBL_INVOICE> TBL_INVOICEs
		{
			get
			{
				return this._TBL_INVOICEs;
			}
			set
			{
				this._TBL_INVOICEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Branch_TBL_LETTER_OF_CREDIT", Storage="_TBL_Branch", ThisKey="branchCode", OtherKey="branchid", IsForeignKey=true, DeleteRule="CASCADE")]
		public TBL_Branch TBL_Branch
		{
			get
			{
				return this._TBL_Branch.Entity;
			}
			set
			{
				TBL_Branch previousValue = this._TBL_Branch.Entity;
				if (((previousValue != value) 
							|| (this._TBL_Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_Branch.Entity = null;
						previousValue.TBL_LETTER_OF_CREDITs.Remove(this);
					}
					this._TBL_Branch.Entity = value;
					if ((value != null))
					{
						value.TBL_LETTER_OF_CREDITs.Add(this);
						this._branchCode = value.branchid;
					}
					else
					{
						this._branchCode = default(Nullable<long>);
					}
					this.SendPropertyChanged("TBL_Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_LC_CORRESPONDENT_TBL_LETTER_OF_CREDIT", Storage="_TBL_LC_CORRESPONDENT", ThisKey="corespondenceID", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TBL_LC_CORRESPONDENT TBL_LC_CORRESPONDENT
		{
			get
			{
				return this._TBL_LC_CORRESPONDENT.Entity;
			}
			set
			{
				TBL_LC_CORRESPONDENT previousValue = this._TBL_LC_CORRESPONDENT.Entity;
				if (((previousValue != value) 
							|| (this._TBL_LC_CORRESPONDENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_LC_CORRESPONDENT.Entity = null;
						previousValue.TBL_LETTER_OF_CREDITs.Remove(this);
					}
					this._TBL_LC_CORRESPONDENT.Entity = value;
					if ((value != null))
					{
						value.TBL_LETTER_OF_CREDITs.Add(this);
						this._corespondenceID = value.id;
					}
					else
					{
						this._corespondenceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBL_LC_CORRESPONDENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_OPEN_THROUGH_BANK_TBL_LETTER_OF_CREDIT", Storage="_TBL_OPEN_THROUGH_BANK", ThisKey="openThroughId", OtherKey="opId", IsForeignKey=true, DeleteRule="CASCADE")]
		public TBL_OPEN_THROUGH_BANK TBL_OPEN_THROUGH_BANK
		{
			get
			{
				return this._TBL_OPEN_THROUGH_BANK.Entity;
			}
			set
			{
				TBL_OPEN_THROUGH_BANK previousValue = this._TBL_OPEN_THROUGH_BANK.Entity;
				if (((previousValue != value) 
							|| (this._TBL_OPEN_THROUGH_BANK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_OPEN_THROUGH_BANK.Entity = null;
						previousValue.TBL_LETTER_OF_CREDITs.Remove(this);
					}
					this._TBL_OPEN_THROUGH_BANK.Entity = value;
					if ((value != null))
					{
						value.TBL_LETTER_OF_CREDITs.Add(this);
						this._openThroughId = value.opId;
					}
					else
					{
						this._openThroughId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBL_OPEN_THROUGH_BANK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_LC_EXCESS_AMOUNTs(TBL_LC_EXCESS_AMOUNT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_LETTER_OF_CREDIT = this;
		}
		
		private void detach_TBL_LC_EXCESS_AMOUNTs(TBL_LC_EXCESS_AMOUNT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_LETTER_OF_CREDIT = null;
		}
		
		private void attach_TBL_LC_INCREMENTs(TBL_LC_INCREMENT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_LETTER_OF_CREDIT = this;
		}
		
		private void detach_TBL_LC_INCREMENTs(TBL_LC_INCREMENT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_LETTER_OF_CREDIT = null;
		}
		
		private void attach_TBL_LC_EXTENTIONs(TBL_LC_EXTENTION entity)
		{
			this.SendPropertyChanging();
			entity.TBL_LETTER_OF_CREDIT = this;
		}
		
		private void detach_TBL_LC_EXTENTIONs(TBL_LC_EXTENTION entity)
		{
			this.SendPropertyChanging();
			entity.TBL_LETTER_OF_CREDIT = null;
		}
		
		private void attach_TBL_INVOICEs(TBL_INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.TBL_LETTER_OF_CREDIT = this;
		}
		
		private void detach_TBL_INVOICEs(TBL_INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.TBL_LETTER_OF_CREDIT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_LC_EXCESS_AMOUNT")]
	public partial class TBL_LC_EXCESS_AMOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<double> _excessAmount;
		
		private System.Nullable<int> _excessPermitYear;
		
		private string _excessPermitCode;
		
		private System.Nullable<System.DateTime> _excessAmountValueDate;
		
		private System.Nullable<double> _excessAmountRate;
		
		private string _excessLCNumber;
		
		private EntityRef<TBL_LETTER_OF_CREDIT> _TBL_LETTER_OF_CREDIT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnexcessAmountChanging(System.Nullable<double> value);
    partial void OnexcessAmountChanged();
    partial void OnexcessPermitYearChanging(System.Nullable<int> value);
    partial void OnexcessPermitYearChanged();
    partial void OnexcessPermitCodeChanging(string value);
    partial void OnexcessPermitCodeChanged();
    partial void OnexcessAmountValueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexcessAmountValueDateChanged();
    partial void OnexcessAmountRateChanging(System.Nullable<double> value);
    partial void OnexcessAmountRateChanged();
    partial void OnexcessLCNumberChanging(string value);
    partial void OnexcessLCNumberChanged();
    #endregion
		
		public TBL_LC_EXCESS_AMOUNT()
		{
			this._TBL_LETTER_OF_CREDIT = default(EntityRef<TBL_LETTER_OF_CREDIT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_excessAmount", DbType="Float")]
		public System.Nullable<double> excessAmount
		{
			get
			{
				return this._excessAmount;
			}
			set
			{
				if ((this._excessAmount != value))
				{
					this.OnexcessAmountChanging(value);
					this.SendPropertyChanging();
					this._excessAmount = value;
					this.SendPropertyChanged("excessAmount");
					this.OnexcessAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_excessPermitYear", DbType="Int")]
		public System.Nullable<int> excessPermitYear
		{
			get
			{
				return this._excessPermitYear;
			}
			set
			{
				if ((this._excessPermitYear != value))
				{
					this.OnexcessPermitYearChanging(value);
					this.SendPropertyChanging();
					this._excessPermitYear = value;
					this.SendPropertyChanged("excessPermitYear");
					this.OnexcessPermitYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_excessPermitCode", DbType="NVarChar(50)")]
		public string excessPermitCode
		{
			get
			{
				return this._excessPermitCode;
			}
			set
			{
				if ((this._excessPermitCode != value))
				{
					this.OnexcessPermitCodeChanging(value);
					this.SendPropertyChanging();
					this._excessPermitCode = value;
					this.SendPropertyChanged("excessPermitCode");
					this.OnexcessPermitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_excessAmountValueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> excessAmountValueDate
		{
			get
			{
				return this._excessAmountValueDate;
			}
			set
			{
				if ((this._excessAmountValueDate != value))
				{
					this.OnexcessAmountValueDateChanging(value);
					this.SendPropertyChanging();
					this._excessAmountValueDate = value;
					this.SendPropertyChanged("excessAmountValueDate");
					this.OnexcessAmountValueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_excessAmountRate", DbType="Float")]
		public System.Nullable<double> excessAmountRate
		{
			get
			{
				return this._excessAmountRate;
			}
			set
			{
				if ((this._excessAmountRate != value))
				{
					this.OnexcessAmountRateChanging(value);
					this.SendPropertyChanging();
					this._excessAmountRate = value;
					this.SendPropertyChanged("excessAmountRate");
					this.OnexcessAmountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_excessLCNumber", DbType="NVarChar(50)")]
		public string excessLCNumber
		{
			get
			{
				return this._excessLCNumber;
			}
			set
			{
				if ((this._excessLCNumber != value))
				{
					if (this._TBL_LETTER_OF_CREDIT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnexcessLCNumberChanging(value);
					this.SendPropertyChanging();
					this._excessLCNumber = value;
					this.SendPropertyChanged("excessLCNumber");
					this.OnexcessLCNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_LETTER_OF_CREDIT_TBL_LC_EXCESS_AMOUNT", Storage="_TBL_LETTER_OF_CREDIT", ThisKey="excessLCNumber", OtherKey="lcNumber", IsForeignKey=true, DeleteRule="CASCADE")]
		public TBL_LETTER_OF_CREDIT TBL_LETTER_OF_CREDIT
		{
			get
			{
				return this._TBL_LETTER_OF_CREDIT.Entity;
			}
			set
			{
				TBL_LETTER_OF_CREDIT previousValue = this._TBL_LETTER_OF_CREDIT.Entity;
				if (((previousValue != value) 
							|| (this._TBL_LETTER_OF_CREDIT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_LETTER_OF_CREDIT.Entity = null;
						previousValue.TBL_LC_EXCESS_AMOUNTs.Remove(this);
					}
					this._TBL_LETTER_OF_CREDIT.Entity = value;
					if ((value != null))
					{
						value.TBL_LC_EXCESS_AMOUNTs.Add(this);
						this._excessLCNumber = value.lcNumber;
					}
					else
					{
						this._excessLCNumber = default(string);
					}
					this.SendPropertyChanged("TBL_LETTER_OF_CREDIT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_LC_INCREMENT")]
	public partial class TBL_LC_INCREMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<double> _incremetAmount;
		
		private System.Nullable<int> _incrementPermitYear;
		
		private string _incrementPermitCode;
		
		private System.Nullable<System.DateTime> _incrementAmountValueDate;
		
		private System.Nullable<double> _incrementAmountRate;
		
		private string _increntLCNumber;
		
		private EntityRef<TBL_LETTER_OF_CREDIT> _TBL_LETTER_OF_CREDIT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnincremetAmountChanging(System.Nullable<double> value);
    partial void OnincremetAmountChanged();
    partial void OnincrementPermitYearChanging(System.Nullable<int> value);
    partial void OnincrementPermitYearChanged();
    partial void OnincrementPermitCodeChanging(string value);
    partial void OnincrementPermitCodeChanged();
    partial void OnincrementAmountValueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnincrementAmountValueDateChanged();
    partial void OnincrementAmountRateChanging(System.Nullable<double> value);
    partial void OnincrementAmountRateChanged();
    partial void OnincrentLCNumberChanging(string value);
    partial void OnincrentLCNumberChanged();
    #endregion
		
		public TBL_LC_INCREMENT()
		{
			this._TBL_LETTER_OF_CREDIT = default(EntityRef<TBL_LETTER_OF_CREDIT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incremetAmount", DbType="Float")]
		public System.Nullable<double> incremetAmount
		{
			get
			{
				return this._incremetAmount;
			}
			set
			{
				if ((this._incremetAmount != value))
				{
					this.OnincremetAmountChanging(value);
					this.SendPropertyChanging();
					this._incremetAmount = value;
					this.SendPropertyChanged("incremetAmount");
					this.OnincremetAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incrementPermitYear", DbType="Int")]
		public System.Nullable<int> incrementPermitYear
		{
			get
			{
				return this._incrementPermitYear;
			}
			set
			{
				if ((this._incrementPermitYear != value))
				{
					this.OnincrementPermitYearChanging(value);
					this.SendPropertyChanging();
					this._incrementPermitYear = value;
					this.SendPropertyChanged("incrementPermitYear");
					this.OnincrementPermitYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incrementPermitCode", DbType="NVarChar(50)")]
		public string incrementPermitCode
		{
			get
			{
				return this._incrementPermitCode;
			}
			set
			{
				if ((this._incrementPermitCode != value))
				{
					this.OnincrementPermitCodeChanging(value);
					this.SendPropertyChanging();
					this._incrementPermitCode = value;
					this.SendPropertyChanged("incrementPermitCode");
					this.OnincrementPermitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incrementAmountValueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> incrementAmountValueDate
		{
			get
			{
				return this._incrementAmountValueDate;
			}
			set
			{
				if ((this._incrementAmountValueDate != value))
				{
					this.OnincrementAmountValueDateChanging(value);
					this.SendPropertyChanging();
					this._incrementAmountValueDate = value;
					this.SendPropertyChanged("incrementAmountValueDate");
					this.OnincrementAmountValueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incrementAmountRate", DbType="Float")]
		public System.Nullable<double> incrementAmountRate
		{
			get
			{
				return this._incrementAmountRate;
			}
			set
			{
				if ((this._incrementAmountRate != value))
				{
					this.OnincrementAmountRateChanging(value);
					this.SendPropertyChanging();
					this._incrementAmountRate = value;
					this.SendPropertyChanged("incrementAmountRate");
					this.OnincrementAmountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_increntLCNumber", DbType="NVarChar(50)")]
		public string increntLCNumber
		{
			get
			{
				return this._increntLCNumber;
			}
			set
			{
				if ((this._increntLCNumber != value))
				{
					if (this._TBL_LETTER_OF_CREDIT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnincrentLCNumberChanging(value);
					this.SendPropertyChanging();
					this._increntLCNumber = value;
					this.SendPropertyChanged("increntLCNumber");
					this.OnincrentLCNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_LETTER_OF_CREDIT_TBL_LC_INCREMENT", Storage="_TBL_LETTER_OF_CREDIT", ThisKey="increntLCNumber", OtherKey="lcNumber", IsForeignKey=true, DeleteRule="CASCADE")]
		public TBL_LETTER_OF_CREDIT TBL_LETTER_OF_CREDIT
		{
			get
			{
				return this._TBL_LETTER_OF_CREDIT.Entity;
			}
			set
			{
				TBL_LETTER_OF_CREDIT previousValue = this._TBL_LETTER_OF_CREDIT.Entity;
				if (((previousValue != value) 
							|| (this._TBL_LETTER_OF_CREDIT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_LETTER_OF_CREDIT.Entity = null;
						previousValue.TBL_LC_INCREMENTs.Remove(this);
					}
					this._TBL_LETTER_OF_CREDIT.Entity = value;
					if ((value != null))
					{
						value.TBL_LC_INCREMENTs.Add(this);
						this._increntLCNumber = value.lcNumber;
					}
					else
					{
						this._increntLCNumber = default(string);
					}
					this.SendPropertyChanged("TBL_LETTER_OF_CREDIT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_LC_EXTENTION")]
	public partial class TBL_LC_EXTENTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<double> _extentionAmount;
		
		private System.Nullable<int> _extentionPeriod;
		
		private System.DateTime _extentionDate;
		
		private System.Nullable<int> _extInvoiceSequence;
		
		private string _extLcNumber;
		
		private EntityRef<TBL_LETTER_OF_CREDIT> _TBL_LETTER_OF_CREDIT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnextentionAmountChanging(System.Nullable<double> value);
    partial void OnextentionAmountChanged();
    partial void OnextentionPeriodChanging(System.Nullable<int> value);
    partial void OnextentionPeriodChanged();
    partial void OnextentionDateChanging(System.DateTime value);
    partial void OnextentionDateChanged();
    partial void OnextInvoiceSequenceChanging(System.Nullable<int> value);
    partial void OnextInvoiceSequenceChanged();
    partial void OnextLcNumberChanging(string value);
    partial void OnextLcNumberChanged();
    #endregion
		
		public TBL_LC_EXTENTION()
		{
			this._TBL_LETTER_OF_CREDIT = default(EntityRef<TBL_LETTER_OF_CREDIT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extentionAmount", DbType="Float")]
		public System.Nullable<double> extentionAmount
		{
			get
			{
				return this._extentionAmount;
			}
			set
			{
				if ((this._extentionAmount != value))
				{
					this.OnextentionAmountChanging(value);
					this.SendPropertyChanging();
					this._extentionAmount = value;
					this.SendPropertyChanged("extentionAmount");
					this.OnextentionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extentionPeriod", DbType="Int")]
		public System.Nullable<int> extentionPeriod
		{
			get
			{
				return this._extentionPeriod;
			}
			set
			{
				if ((this._extentionPeriod != value))
				{
					this.OnextentionPeriodChanging(value);
					this.SendPropertyChanging();
					this._extentionPeriod = value;
					this.SendPropertyChanged("extentionPeriod");
					this.OnextentionPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extentionDate", DbType="Date NOT NULL")]
		public System.DateTime extentionDate
		{
			get
			{
				return this._extentionDate;
			}
			set
			{
				if ((this._extentionDate != value))
				{
					this.OnextentionDateChanging(value);
					this.SendPropertyChanging();
					this._extentionDate = value;
					this.SendPropertyChanged("extentionDate");
					this.OnextentionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extInvoiceSequence", DbType="Int")]
		public System.Nullable<int> extInvoiceSequence
		{
			get
			{
				return this._extInvoiceSequence;
			}
			set
			{
				if ((this._extInvoiceSequence != value))
				{
					this.OnextInvoiceSequenceChanging(value);
					this.SendPropertyChanging();
					this._extInvoiceSequence = value;
					this.SendPropertyChanged("extInvoiceSequence");
					this.OnextInvoiceSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extLcNumber", DbType="NVarChar(50)")]
		public string extLcNumber
		{
			get
			{
				return this._extLcNumber;
			}
			set
			{
				if ((this._extLcNumber != value))
				{
					if (this._TBL_LETTER_OF_CREDIT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnextLcNumberChanging(value);
					this.SendPropertyChanging();
					this._extLcNumber = value;
					this.SendPropertyChanged("extLcNumber");
					this.OnextLcNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_LETTER_OF_CREDIT_TBL_LC_EXTENTION", Storage="_TBL_LETTER_OF_CREDIT", ThisKey="extLcNumber", OtherKey="lcNumber", IsForeignKey=true, DeleteRule="CASCADE")]
		public TBL_LETTER_OF_CREDIT TBL_LETTER_OF_CREDIT
		{
			get
			{
				return this._TBL_LETTER_OF_CREDIT.Entity;
			}
			set
			{
				TBL_LETTER_OF_CREDIT previousValue = this._TBL_LETTER_OF_CREDIT.Entity;
				if (((previousValue != value) 
							|| (this._TBL_LETTER_OF_CREDIT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_LETTER_OF_CREDIT.Entity = null;
						previousValue.TBL_LC_EXTENTIONs.Remove(this);
					}
					this._TBL_LETTER_OF_CREDIT.Entity = value;
					if ((value != null))
					{
						value.TBL_LC_EXTENTIONs.Add(this);
						this._extLcNumber = value.lcNumber;
					}
					else
					{
						this._extLcNumber = default(string);
					}
					this.SendPropertyChanged("TBL_LETTER_OF_CREDIT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VW_LC_EXTENTION")]
	public partial class VW_LC_EXTENTION
	{
		
		private string _lcNumber;
		
		private System.Nullable<System.DateTime> _valueDate;
		
		private System.Nullable<int> _lcCode;
		
		private string _permitCode;
		
		private System.Nullable<int> _permitYear;
		
		private System.Nullable<double> _lcValue;
		
		private System.Nullable<double> _lcOpeningCurrencyRate;
		
		private System.Nullable<double> _marginPaid;
		
		private string _correspondentName;
		
		private string _bankName;
		
		private string _bankCode;
		
		private string _supplyerName;
		
		private string _customerAccount;
		
		private string _branchName;
		
		private string _branchAbrivation;
		
		private string _lcStatus;
		
		private string _customerName;
		
		private string _confirmationStratus;
		
		private string _currencyType;
		
		private System.Nullable<double> _tollerance;
		
		private System.Nullable<double> _totalInvoiceValue;
		
		private string _openingCurrency;
		
		private string _accountBranch;
		
		private string _branchCode;
		
		private System.Nullable<double> _extentionAmount;
		
		private System.Nullable<int> _extentionPeriod;
		
		private System.DateTime _extentionDate;
		
		private int _id;
		
		private System.Nullable<int> _extInvoiceSequence;
		
		private System.Nullable<int> _openThroughId;
		
		private System.Nullable<int> _corespondenceID;
		
		public VW_LC_EXTENTION()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lcNumber
		{
			get
			{
				return this._lcNumber;
			}
			set
			{
				if ((this._lcNumber != value))
				{
					this._lcNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> valueDate
		{
			get
			{
				return this._valueDate;
			}
			set
			{
				if ((this._valueDate != value))
				{
					this._valueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcCode", DbType="Int")]
		public System.Nullable<int> lcCode
		{
			get
			{
				return this._lcCode;
			}
			set
			{
				if ((this._lcCode != value))
				{
					this._lcCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitCode", DbType="NVarChar(50)")]
		public string permitCode
		{
			get
			{
				return this._permitCode;
			}
			set
			{
				if ((this._permitCode != value))
				{
					this._permitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitYear", DbType="Int")]
		public System.Nullable<int> permitYear
		{
			get
			{
				return this._permitYear;
			}
			set
			{
				if ((this._permitYear != value))
				{
					this._permitYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcValue", DbType="Float")]
		public System.Nullable<double> lcValue
		{
			get
			{
				return this._lcValue;
			}
			set
			{
				if ((this._lcValue != value))
				{
					this._lcValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcOpeningCurrencyRate", DbType="Float")]
		public System.Nullable<double> lcOpeningCurrencyRate
		{
			get
			{
				return this._lcOpeningCurrencyRate;
			}
			set
			{
				if ((this._lcOpeningCurrencyRate != value))
				{
					this._lcOpeningCurrencyRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marginPaid", DbType="Float")]
		public System.Nullable<double> marginPaid
		{
			get
			{
				return this._marginPaid;
			}
			set
			{
				if ((this._marginPaid != value))
				{
					this._marginPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correspondentName", DbType="NVarChar(50)")]
		public string correspondentName
		{
			get
			{
				return this._correspondentName;
			}
			set
			{
				if ((this._correspondentName != value))
				{
					this._correspondentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankName", DbType="NVarChar(255)")]
		public string bankName
		{
			get
			{
				return this._bankName;
			}
			set
			{
				if ((this._bankName != value))
				{
					this._bankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankCode", DbType="NVarChar(50)")]
		public string bankCode
		{
			get
			{
				return this._bankCode;
			}
			set
			{
				if ((this._bankCode != value))
				{
					this._bankCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplyerName", DbType="NVarChar(255)")]
		public string supplyerName
		{
			get
			{
				return this._supplyerName;
			}
			set
			{
				if ((this._supplyerName != value))
				{
					this._supplyerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerAccount", DbType="NVarChar(50)")]
		public string customerAccount
		{
			get
			{
				return this._customerAccount;
			}
			set
			{
				if ((this._customerAccount != value))
				{
					this._customerAccount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchName", DbType="NVarChar(50)")]
		public string branchName
		{
			get
			{
				return this._branchName;
			}
			set
			{
				if ((this._branchName != value))
				{
					this._branchName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchAbrivation", DbType="NVarChar(50)")]
		public string branchAbrivation
		{
			get
			{
				return this._branchAbrivation;
			}
			set
			{
				if ((this._branchAbrivation != value))
				{
					this._branchAbrivation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcStatus", DbType="NVarChar(50)")]
		public string lcStatus
		{
			get
			{
				return this._lcStatus;
			}
			set
			{
				if ((this._lcStatus != value))
				{
					this._lcStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerName", DbType="NVarChar(255)")]
		public string customerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this._customerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmationStratus", DbType="NVarChar(50)")]
		public string confirmationStratus
		{
			get
			{
				return this._confirmationStratus;
			}
			set
			{
				if ((this._confirmationStratus != value))
				{
					this._confirmationStratus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyType", DbType="NVarChar(50)")]
		public string currencyType
		{
			get
			{
				return this._currencyType;
			}
			set
			{
				if ((this._currencyType != value))
				{
					this._currencyType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tollerance", DbType="Float")]
		public System.Nullable<double> tollerance
		{
			get
			{
				return this._tollerance;
			}
			set
			{
				if ((this._tollerance != value))
				{
					this._tollerance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalInvoiceValue", DbType="Float")]
		public System.Nullable<double> totalInvoiceValue
		{
			get
			{
				return this._totalInvoiceValue;
			}
			set
			{
				if ((this._totalInvoiceValue != value))
				{
					this._totalInvoiceValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openingCurrency", DbType="NVarChar(50)")]
		public string openingCurrency
		{
			get
			{
				return this._openingCurrency;
			}
			set
			{
				if ((this._openingCurrency != value))
				{
					this._openingCurrency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountBranch", DbType="NVarChar(50)")]
		public string accountBranch
		{
			get
			{
				return this._accountBranch;
			}
			set
			{
				if ((this._accountBranch != value))
				{
					this._accountBranch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchCode", DbType="NVarChar(50)")]
		public string branchCode
		{
			get
			{
				return this._branchCode;
			}
			set
			{
				if ((this._branchCode != value))
				{
					this._branchCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extentionAmount", DbType="Float")]
		public System.Nullable<double> extentionAmount
		{
			get
			{
				return this._extentionAmount;
			}
			set
			{
				if ((this._extentionAmount != value))
				{
					this._extentionAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extentionPeriod", DbType="Int")]
		public System.Nullable<int> extentionPeriod
		{
			get
			{
				return this._extentionPeriod;
			}
			set
			{
				if ((this._extentionPeriod != value))
				{
					this._extentionPeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extentionDate", DbType="Date NOT NULL")]
		public System.DateTime extentionDate
		{
			get
			{
				return this._extentionDate;
			}
			set
			{
				if ((this._extentionDate != value))
				{
					this._extentionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extInvoiceSequence", DbType="Int")]
		public System.Nullable<int> extInvoiceSequence
		{
			get
			{
				return this._extInvoiceSequence;
			}
			set
			{
				if ((this._extInvoiceSequence != value))
				{
					this._extInvoiceSequence = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openThroughId", DbType="Int")]
		public System.Nullable<int> openThroughId
		{
			get
			{
				return this._openThroughId;
			}
			set
			{
				if ((this._openThroughId != value))
				{
					this._openThroughId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corespondenceID", DbType="Int")]
		public System.Nullable<int> corespondenceID
		{
			get
			{
				return this._corespondenceID;
			}
			set
			{
				if ((this._corespondenceID != value))
				{
					this._corespondenceID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_INVOICE")]
	public partial class TBL_INVOICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _referenceNo;
		
		private System.Nullable<System.DateTime> _invoiceDate;
		
		private System.Nullable<double> _invoiceValue;
		
		private System.Nullable<double> _invoiceRate;
		
		private System.Nullable<int> _openThroughId;
		
		private string _openThroughBank;
		
		private string _status;
		
		private string _descripancyStatus;
		
		private string _invoiceLCNumber;
		
		private System.Nullable<System.DateTime> _interestBeginDate;
		
		private System.Nullable<int> _invoiceSequence;
		
		private string _sequenceStatus;
		
		private System.Nullable<int> _numberOfSwift;
		
		private System.Nullable<System.DateTime> _shipmentDate;
		
		private EntityRef<TBL_LETTER_OF_CREDIT> _TBL_LETTER_OF_CREDIT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnreferenceNoChanging(string value);
    partial void OnreferenceNoChanged();
    partial void OninvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OninvoiceDateChanged();
    partial void OninvoiceValueChanging(System.Nullable<double> value);
    partial void OninvoiceValueChanged();
    partial void OninvoiceRateChanging(System.Nullable<double> value);
    partial void OninvoiceRateChanged();
    partial void OnopenThroughIdChanging(System.Nullable<int> value);
    partial void OnopenThroughIdChanged();
    partial void OnopenThroughBankChanging(string value);
    partial void OnopenThroughBankChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OndescripancyStatusChanging(string value);
    partial void OndescripancyStatusChanged();
    partial void OninvoiceLCNumberChanging(string value);
    partial void OninvoiceLCNumberChanged();
    partial void OninterestBeginDateChanging(System.Nullable<System.DateTime> value);
    partial void OninterestBeginDateChanged();
    partial void OninvoiceSequenceChanging(System.Nullable<int> value);
    partial void OninvoiceSequenceChanged();
    partial void OnsequenceStatusChanging(string value);
    partial void OnsequenceStatusChanged();
    partial void OnnumberOfSwiftChanging(System.Nullable<int> value);
    partial void OnnumberOfSwiftChanged();
    partial void OnshipmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnshipmentDateChanged();
    #endregion
		
		public TBL_INVOICE()
		{
			this._TBL_LETTER_OF_CREDIT = default(EntityRef<TBL_LETTER_OF_CREDIT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referenceNo", DbType="NVarChar(50)")]
		public string referenceNo
		{
			get
			{
				return this._referenceNo;
			}
			set
			{
				if ((this._referenceNo != value))
				{
					this.OnreferenceNoChanging(value);
					this.SendPropertyChanging();
					this._referenceNo = value;
					this.SendPropertyChanged("referenceNo");
					this.OnreferenceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> invoiceDate
		{
			get
			{
				return this._invoiceDate;
			}
			set
			{
				if ((this._invoiceDate != value))
				{
					this.OninvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._invoiceDate = value;
					this.SendPropertyChanged("invoiceDate");
					this.OninvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceValue", DbType="Float")]
		public System.Nullable<double> invoiceValue
		{
			get
			{
				return this._invoiceValue;
			}
			set
			{
				if ((this._invoiceValue != value))
				{
					this.OninvoiceValueChanging(value);
					this.SendPropertyChanging();
					this._invoiceValue = value;
					this.SendPropertyChanged("invoiceValue");
					this.OninvoiceValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceRate", DbType="Float")]
		public System.Nullable<double> invoiceRate
		{
			get
			{
				return this._invoiceRate;
			}
			set
			{
				if ((this._invoiceRate != value))
				{
					this.OninvoiceRateChanging(value);
					this.SendPropertyChanging();
					this._invoiceRate = value;
					this.SendPropertyChanged("invoiceRate");
					this.OninvoiceRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openThroughId", DbType="Int")]
		public System.Nullable<int> openThroughId
		{
			get
			{
				return this._openThroughId;
			}
			set
			{
				if ((this._openThroughId != value))
				{
					this.OnopenThroughIdChanging(value);
					this.SendPropertyChanging();
					this._openThroughId = value;
					this.SendPropertyChanged("openThroughId");
					this.OnopenThroughIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openThroughBank", DbType="NVarChar(255)")]
		public string openThroughBank
		{
			get
			{
				return this._openThroughBank;
			}
			set
			{
				if ((this._openThroughBank != value))
				{
					this.OnopenThroughBankChanging(value);
					this.SendPropertyChanging();
					this._openThroughBank = value;
					this.SendPropertyChanged("openThroughBank");
					this.OnopenThroughBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripancyStatus", DbType="NVarChar(50)")]
		public string descripancyStatus
		{
			get
			{
				return this._descripancyStatus;
			}
			set
			{
				if ((this._descripancyStatus != value))
				{
					this.OndescripancyStatusChanging(value);
					this.SendPropertyChanging();
					this._descripancyStatus = value;
					this.SendPropertyChanged("descripancyStatus");
					this.OndescripancyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceLCNumber", DbType="NVarChar(50)")]
		public string invoiceLCNumber
		{
			get
			{
				return this._invoiceLCNumber;
			}
			set
			{
				if ((this._invoiceLCNumber != value))
				{
					if (this._TBL_LETTER_OF_CREDIT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OninvoiceLCNumberChanging(value);
					this.SendPropertyChanging();
					this._invoiceLCNumber = value;
					this.SendPropertyChanged("invoiceLCNumber");
					this.OninvoiceLCNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interestBeginDate", DbType="Date")]
		public System.Nullable<System.DateTime> interestBeginDate
		{
			get
			{
				return this._interestBeginDate;
			}
			set
			{
				if ((this._interestBeginDate != value))
				{
					this.OninterestBeginDateChanging(value);
					this.SendPropertyChanging();
					this._interestBeginDate = value;
					this.SendPropertyChanged("interestBeginDate");
					this.OninterestBeginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceSequence", DbType="Int")]
		public System.Nullable<int> invoiceSequence
		{
			get
			{
				return this._invoiceSequence;
			}
			set
			{
				if ((this._invoiceSequence != value))
				{
					this.OninvoiceSequenceChanging(value);
					this.SendPropertyChanging();
					this._invoiceSequence = value;
					this.SendPropertyChanged("invoiceSequence");
					this.OninvoiceSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sequenceStatus", DbType="NVarChar(50)")]
		public string sequenceStatus
		{
			get
			{
				return this._sequenceStatus;
			}
			set
			{
				if ((this._sequenceStatus != value))
				{
					this.OnsequenceStatusChanging(value);
					this.SendPropertyChanging();
					this._sequenceStatus = value;
					this.SendPropertyChanged("sequenceStatus");
					this.OnsequenceStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numberOfSwift", DbType="Int")]
		public System.Nullable<int> numberOfSwift
		{
			get
			{
				return this._numberOfSwift;
			}
			set
			{
				if ((this._numberOfSwift != value))
				{
					this.OnnumberOfSwiftChanging(value);
					this.SendPropertyChanging();
					this._numberOfSwift = value;
					this.SendPropertyChanged("numberOfSwift");
					this.OnnumberOfSwiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> shipmentDate
		{
			get
			{
				return this._shipmentDate;
			}
			set
			{
				if ((this._shipmentDate != value))
				{
					this.OnshipmentDateChanging(value);
					this.SendPropertyChanging();
					this._shipmentDate = value;
					this.SendPropertyChanged("shipmentDate");
					this.OnshipmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_LETTER_OF_CREDIT_TBL_INVOICE", Storage="_TBL_LETTER_OF_CREDIT", ThisKey="invoiceLCNumber", OtherKey="lcNumber", IsForeignKey=true, DeleteRule="CASCADE")]
		public TBL_LETTER_OF_CREDIT TBL_LETTER_OF_CREDIT
		{
			get
			{
				return this._TBL_LETTER_OF_CREDIT.Entity;
			}
			set
			{
				TBL_LETTER_OF_CREDIT previousValue = this._TBL_LETTER_OF_CREDIT.Entity;
				if (((previousValue != value) 
							|| (this._TBL_LETTER_OF_CREDIT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_LETTER_OF_CREDIT.Entity = null;
						previousValue.TBL_INVOICEs.Remove(this);
					}
					this._TBL_LETTER_OF_CREDIT.Entity = value;
					if ((value != null))
					{
						value.TBL_INVOICEs.Add(this);
						this._invoiceLCNumber = value.lcNumber;
					}
					else
					{
						this._invoiceLCNumber = default(string);
					}
					this.SendPropertyChanged("TBL_LETTER_OF_CREDIT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VW_DETAIL_LC")]
	public partial class VW_DETAIL_LC
	{
		
		private string _lcNumber;
		
		private System.Nullable<int> _lcCode;
		
		private System.Nullable<System.DateTime> _valueDate;
		
		private string _permitCode;
		
		private System.Nullable<int> _permitYear;
		
		private System.Nullable<double> _lcValue;
		
		private System.Nullable<double> _lcOpeningCurrencyRate;
		
		private System.Nullable<double> _marginPaid;
		
		private string _correspondentName;
		
		private string _aibAcountNo;
		
		private System.Nullable<int> _corespondenceID;
		
		private System.Nullable<int> _openThroughId;
		
		private string _bankName;
		
		private string _bankCode;
		
		private string _supplyerName;
		
		private string _customerAccount;
		
		private string _branchName;
		
		private string _branchAbrivation;
		
		private string _lcStatus;
		
		private System.Nullable<System.DateTime> _lcOpeningDate;
		
		private string _customerName;
		
		private string _confirmationStratus;
		
		private string _currencyType;
		
		private System.Nullable<double> _tollerance;
		
		private System.Nullable<double> _totalInvoiceValue;
		
		private string _openingCurrency;
		
		private string _accountBranch;
		
		private string _branchCode;
		
		private System.Nullable<int> _openingPeriods;
		
		private System.Nullable<int> _userExpirationDates;
		
		public VW_DETAIL_LC()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lcNumber
		{
			get
			{
				return this._lcNumber;
			}
			set
			{
				if ((this._lcNumber != value))
				{
					this._lcNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcCode", DbType="Int")]
		public System.Nullable<int> lcCode
		{
			get
			{
				return this._lcCode;
			}
			set
			{
				if ((this._lcCode != value))
				{
					this._lcCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> valueDate
		{
			get
			{
				return this._valueDate;
			}
			set
			{
				if ((this._valueDate != value))
				{
					this._valueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitCode", DbType="NVarChar(50)")]
		public string permitCode
		{
			get
			{
				return this._permitCode;
			}
			set
			{
				if ((this._permitCode != value))
				{
					this._permitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitYear", DbType="Int")]
		public System.Nullable<int> permitYear
		{
			get
			{
				return this._permitYear;
			}
			set
			{
				if ((this._permitYear != value))
				{
					this._permitYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcValue", DbType="Float")]
		public System.Nullable<double> lcValue
		{
			get
			{
				return this._lcValue;
			}
			set
			{
				if ((this._lcValue != value))
				{
					this._lcValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcOpeningCurrencyRate", DbType="Float")]
		public System.Nullable<double> lcOpeningCurrencyRate
		{
			get
			{
				return this._lcOpeningCurrencyRate;
			}
			set
			{
				if ((this._lcOpeningCurrencyRate != value))
				{
					this._lcOpeningCurrencyRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marginPaid", DbType="Float")]
		public System.Nullable<double> marginPaid
		{
			get
			{
				return this._marginPaid;
			}
			set
			{
				if ((this._marginPaid != value))
				{
					this._marginPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correspondentName", DbType="NVarChar(50)")]
		public string correspondentName
		{
			get
			{
				return this._correspondentName;
			}
			set
			{
				if ((this._correspondentName != value))
				{
					this._correspondentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aibAcountNo", DbType="NVarChar(50)")]
		public string aibAcountNo
		{
			get
			{
				return this._aibAcountNo;
			}
			set
			{
				if ((this._aibAcountNo != value))
				{
					this._aibAcountNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corespondenceID", DbType="Int")]
		public System.Nullable<int> corespondenceID
		{
			get
			{
				return this._corespondenceID;
			}
			set
			{
				if ((this._corespondenceID != value))
				{
					this._corespondenceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openThroughId", DbType="Int")]
		public System.Nullable<int> openThroughId
		{
			get
			{
				return this._openThroughId;
			}
			set
			{
				if ((this._openThroughId != value))
				{
					this._openThroughId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankName", DbType="NVarChar(255)")]
		public string bankName
		{
			get
			{
				return this._bankName;
			}
			set
			{
				if ((this._bankName != value))
				{
					this._bankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankCode", DbType="NVarChar(50)")]
		public string bankCode
		{
			get
			{
				return this._bankCode;
			}
			set
			{
				if ((this._bankCode != value))
				{
					this._bankCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplyerName", DbType="NVarChar(255)")]
		public string supplyerName
		{
			get
			{
				return this._supplyerName;
			}
			set
			{
				if ((this._supplyerName != value))
				{
					this._supplyerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerAccount", DbType="NVarChar(50)")]
		public string customerAccount
		{
			get
			{
				return this._customerAccount;
			}
			set
			{
				if ((this._customerAccount != value))
				{
					this._customerAccount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchName", DbType="NVarChar(50)")]
		public string branchName
		{
			get
			{
				return this._branchName;
			}
			set
			{
				if ((this._branchName != value))
				{
					this._branchName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchAbrivation", DbType="NVarChar(50)")]
		public string branchAbrivation
		{
			get
			{
				return this._branchAbrivation;
			}
			set
			{
				if ((this._branchAbrivation != value))
				{
					this._branchAbrivation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcStatus", DbType="NVarChar(50)")]
		public string lcStatus
		{
			get
			{
				return this._lcStatus;
			}
			set
			{
				if ((this._lcStatus != value))
				{
					this._lcStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcOpeningDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lcOpeningDate
		{
			get
			{
				return this._lcOpeningDate;
			}
			set
			{
				if ((this._lcOpeningDate != value))
				{
					this._lcOpeningDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerName", DbType="NVarChar(255)")]
		public string customerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this._customerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmationStratus", DbType="NVarChar(50)")]
		public string confirmationStratus
		{
			get
			{
				return this._confirmationStratus;
			}
			set
			{
				if ((this._confirmationStratus != value))
				{
					this._confirmationStratus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyType", DbType="NVarChar(50)")]
		public string currencyType
		{
			get
			{
				return this._currencyType;
			}
			set
			{
				if ((this._currencyType != value))
				{
					this._currencyType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tollerance", DbType="Float")]
		public System.Nullable<double> tollerance
		{
			get
			{
				return this._tollerance;
			}
			set
			{
				if ((this._tollerance != value))
				{
					this._tollerance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalInvoiceValue", DbType="Float")]
		public System.Nullable<double> totalInvoiceValue
		{
			get
			{
				return this._totalInvoiceValue;
			}
			set
			{
				if ((this._totalInvoiceValue != value))
				{
					this._totalInvoiceValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openingCurrency", DbType="NVarChar(50)")]
		public string openingCurrency
		{
			get
			{
				return this._openingCurrency;
			}
			set
			{
				if ((this._openingCurrency != value))
				{
					this._openingCurrency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountBranch", DbType="NVarChar(50)")]
		public string accountBranch
		{
			get
			{
				return this._accountBranch;
			}
			set
			{
				if ((this._accountBranch != value))
				{
					this._accountBranch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchCode", DbType="NVarChar(50)")]
		public string branchCode
		{
			get
			{
				return this._branchCode;
			}
			set
			{
				if ((this._branchCode != value))
				{
					this._branchCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openingPeriods", DbType="Int")]
		public System.Nullable<int> openingPeriods
		{
			get
			{
				return this._openingPeriods;
			}
			set
			{
				if ((this._openingPeriods != value))
				{
					this._openingPeriods = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userExpirationDates", DbType="Int")]
		public System.Nullable<int> userExpirationDates
		{
			get
			{
				return this._userExpirationDates;
			}
			set
			{
				if ((this._userExpirationDates != value))
				{
					this._userExpirationDates = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VW_LC_DETAIL_ADVICE_DETAIL")]
	public partial class VW_LC_DETAIL_ADVICE_DETAIL
	{
		
		private int _id;
		
		private string _referenceNo;
		
		private System.Nullable<System.DateTime> _invoiceDate;
		
		private System.Nullable<double> _invoiceValue;
		
		private System.Nullable<double> _invoiceRate;
		
		private System.Nullable<int> _invoiceOpenThroughId;
		
		private string _openThroughBank;
		
		private string _status;
		
		private string _descripancyStatus;
		
		private System.Nullable<int> _numberOfSwift;
		
		private string _sequenceStatus;
		
		private System.Nullable<int> _invoiceSequence;
		
		private string _lcNumber;
		
		private System.Nullable<int> _lcCode;
		
		private System.Nullable<System.DateTime> _valueDate;
		
		private string _permitCode;
		
		private System.Nullable<int> _permitYear;
		
		private System.Nullable<double> _lcValue;
		
		private System.Nullable<double> _lcOpeningCurrencyRate;
		
		private System.Nullable<double> _marginPaid;
		
		private string _correspondentName;
		
		private string _aibAcountNo;
		
		private System.Nullable<int> _openThroughId;
		
		private string _bankName;
		
		private string _bankCode;
		
		private string _supplyerName;
		
		private string _customerAccount;
		
		private string _branchName;
		
		private string _branchAbrivation;
		
		private string _lcStatus;
		
		private string _customerName;
		
		private string _confirmationStratus;
		
		private string _currencyType;
		
		private System.Nullable<double> _tollerance;
		
		private System.Nullable<double> _totalInvoiceValue;
		
		private string _openingCurrency;
		
		private string _accountBranch;
		
		private string _branchCode;
		
		private System.Nullable<System.DateTime> _shipmentDate;
		
		private System.Nullable<int> _openingPeriods;
		
		private System.Nullable<int> _userExpirationDates;
		
		private System.Nullable<System.DateTime> _lcOpeningDate;
		
		public VW_LC_DETAIL_ADVICE_DETAIL()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referenceNo", DbType="NVarChar(50)")]
		public string referenceNo
		{
			get
			{
				return this._referenceNo;
			}
			set
			{
				if ((this._referenceNo != value))
				{
					this._referenceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> invoiceDate
		{
			get
			{
				return this._invoiceDate;
			}
			set
			{
				if ((this._invoiceDate != value))
				{
					this._invoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceValue", DbType="Float")]
		public System.Nullable<double> invoiceValue
		{
			get
			{
				return this._invoiceValue;
			}
			set
			{
				if ((this._invoiceValue != value))
				{
					this._invoiceValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceRate", DbType="Float")]
		public System.Nullable<double> invoiceRate
		{
			get
			{
				return this._invoiceRate;
			}
			set
			{
				if ((this._invoiceRate != value))
				{
					this._invoiceRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceOpenThroughId", DbType="Int")]
		public System.Nullable<int> invoiceOpenThroughId
		{
			get
			{
				return this._invoiceOpenThroughId;
			}
			set
			{
				if ((this._invoiceOpenThroughId != value))
				{
					this._invoiceOpenThroughId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openThroughBank", DbType="NVarChar(255)")]
		public string openThroughBank
		{
			get
			{
				return this._openThroughBank;
			}
			set
			{
				if ((this._openThroughBank != value))
				{
					this._openThroughBank = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripancyStatus", DbType="NVarChar(50)")]
		public string descripancyStatus
		{
			get
			{
				return this._descripancyStatus;
			}
			set
			{
				if ((this._descripancyStatus != value))
				{
					this._descripancyStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numberOfSwift", DbType="Int")]
		public System.Nullable<int> numberOfSwift
		{
			get
			{
				return this._numberOfSwift;
			}
			set
			{
				if ((this._numberOfSwift != value))
				{
					this._numberOfSwift = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sequenceStatus", DbType="NVarChar(50)")]
		public string sequenceStatus
		{
			get
			{
				return this._sequenceStatus;
			}
			set
			{
				if ((this._sequenceStatus != value))
				{
					this._sequenceStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceSequence", DbType="Int")]
		public System.Nullable<int> invoiceSequence
		{
			get
			{
				return this._invoiceSequence;
			}
			set
			{
				if ((this._invoiceSequence != value))
				{
					this._invoiceSequence = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lcNumber
		{
			get
			{
				return this._lcNumber;
			}
			set
			{
				if ((this._lcNumber != value))
				{
					this._lcNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcCode", DbType="Int")]
		public System.Nullable<int> lcCode
		{
			get
			{
				return this._lcCode;
			}
			set
			{
				if ((this._lcCode != value))
				{
					this._lcCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> valueDate
		{
			get
			{
				return this._valueDate;
			}
			set
			{
				if ((this._valueDate != value))
				{
					this._valueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitCode", DbType="NVarChar(50)")]
		public string permitCode
		{
			get
			{
				return this._permitCode;
			}
			set
			{
				if ((this._permitCode != value))
				{
					this._permitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitYear", DbType="Int")]
		public System.Nullable<int> permitYear
		{
			get
			{
				return this._permitYear;
			}
			set
			{
				if ((this._permitYear != value))
				{
					this._permitYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcValue", DbType="Float")]
		public System.Nullable<double> lcValue
		{
			get
			{
				return this._lcValue;
			}
			set
			{
				if ((this._lcValue != value))
				{
					this._lcValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcOpeningCurrencyRate", DbType="Float")]
		public System.Nullable<double> lcOpeningCurrencyRate
		{
			get
			{
				return this._lcOpeningCurrencyRate;
			}
			set
			{
				if ((this._lcOpeningCurrencyRate != value))
				{
					this._lcOpeningCurrencyRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marginPaid", DbType="Float")]
		public System.Nullable<double> marginPaid
		{
			get
			{
				return this._marginPaid;
			}
			set
			{
				if ((this._marginPaid != value))
				{
					this._marginPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correspondentName", DbType="NVarChar(50)")]
		public string correspondentName
		{
			get
			{
				return this._correspondentName;
			}
			set
			{
				if ((this._correspondentName != value))
				{
					this._correspondentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aibAcountNo", DbType="NVarChar(50)")]
		public string aibAcountNo
		{
			get
			{
				return this._aibAcountNo;
			}
			set
			{
				if ((this._aibAcountNo != value))
				{
					this._aibAcountNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openThroughId", DbType="Int")]
		public System.Nullable<int> openThroughId
		{
			get
			{
				return this._openThroughId;
			}
			set
			{
				if ((this._openThroughId != value))
				{
					this._openThroughId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankName", DbType="NVarChar(255)")]
		public string bankName
		{
			get
			{
				return this._bankName;
			}
			set
			{
				if ((this._bankName != value))
				{
					this._bankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankCode", DbType="NVarChar(50)")]
		public string bankCode
		{
			get
			{
				return this._bankCode;
			}
			set
			{
				if ((this._bankCode != value))
				{
					this._bankCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplyerName", DbType="NVarChar(255)")]
		public string supplyerName
		{
			get
			{
				return this._supplyerName;
			}
			set
			{
				if ((this._supplyerName != value))
				{
					this._supplyerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerAccount", DbType="NVarChar(50)")]
		public string customerAccount
		{
			get
			{
				return this._customerAccount;
			}
			set
			{
				if ((this._customerAccount != value))
				{
					this._customerAccount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchName", DbType="NVarChar(50)")]
		public string branchName
		{
			get
			{
				return this._branchName;
			}
			set
			{
				if ((this._branchName != value))
				{
					this._branchName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchAbrivation", DbType="NVarChar(50)")]
		public string branchAbrivation
		{
			get
			{
				return this._branchAbrivation;
			}
			set
			{
				if ((this._branchAbrivation != value))
				{
					this._branchAbrivation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcStatus", DbType="NVarChar(50)")]
		public string lcStatus
		{
			get
			{
				return this._lcStatus;
			}
			set
			{
				if ((this._lcStatus != value))
				{
					this._lcStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerName", DbType="NVarChar(255)")]
		public string customerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this._customerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmationStratus", DbType="NVarChar(50)")]
		public string confirmationStratus
		{
			get
			{
				return this._confirmationStratus;
			}
			set
			{
				if ((this._confirmationStratus != value))
				{
					this._confirmationStratus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyType", DbType="NVarChar(50)")]
		public string currencyType
		{
			get
			{
				return this._currencyType;
			}
			set
			{
				if ((this._currencyType != value))
				{
					this._currencyType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tollerance", DbType="Float")]
		public System.Nullable<double> tollerance
		{
			get
			{
				return this._tollerance;
			}
			set
			{
				if ((this._tollerance != value))
				{
					this._tollerance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalInvoiceValue", DbType="Float")]
		public System.Nullable<double> totalInvoiceValue
		{
			get
			{
				return this._totalInvoiceValue;
			}
			set
			{
				if ((this._totalInvoiceValue != value))
				{
					this._totalInvoiceValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openingCurrency", DbType="NVarChar(50)")]
		public string openingCurrency
		{
			get
			{
				return this._openingCurrency;
			}
			set
			{
				if ((this._openingCurrency != value))
				{
					this._openingCurrency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountBranch", DbType="NVarChar(50)")]
		public string accountBranch
		{
			get
			{
				return this._accountBranch;
			}
			set
			{
				if ((this._accountBranch != value))
				{
					this._accountBranch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchCode", DbType="NVarChar(50)")]
		public string branchCode
		{
			get
			{
				return this._branchCode;
			}
			set
			{
				if ((this._branchCode != value))
				{
					this._branchCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> shipmentDate
		{
			get
			{
				return this._shipmentDate;
			}
			set
			{
				if ((this._shipmentDate != value))
				{
					this._shipmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openingPeriods", DbType="Int")]
		public System.Nullable<int> openingPeriods
		{
			get
			{
				return this._openingPeriods;
			}
			set
			{
				if ((this._openingPeriods != value))
				{
					this._openingPeriods = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userExpirationDates", DbType="Int")]
		public System.Nullable<int> userExpirationDates
		{
			get
			{
				return this._userExpirationDates;
			}
			set
			{
				if ((this._userExpirationDates != value))
				{
					this._userExpirationDates = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcOpeningDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lcOpeningDate
		{
			get
			{
				return this._lcOpeningDate;
			}
			set
			{
				if ((this._lcOpeningDate != value))
				{
					this._lcOpeningDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VW_LC_WITH_ADVICE_SIGHT")]
	public partial class VW_LC_WITH_ADVICE_SIGHT
	{
		
		private string _lcNumber;
		
		private System.Nullable<int> _lcCode;
		
		private System.Nullable<System.DateTime> _valueDate;
		
		private string _permitCode;
		
		private System.Nullable<int> _permitYear;
		
		private System.Nullable<double> _lcValue;
		
		private string _openingCurrency;
		
		private System.Nullable<double> _lcOpeningCurrencyRate;
		
		private System.Nullable<int> _corespondenceID;
		
		private System.Nullable<int> _openThroughId;
		
		private string _supplyerName;
		
		private string _customerAccount;
		
		private string _customerName;
		
		private string _lcStatus;
		
		private string _referenceNo;
		
		private System.Nullable<System.DateTime> _invoiceDate;
		
		private System.Nullable<double> _invoiceValue;
		
		private System.Nullable<double> _invoiceRate;
		
		private string _openThroughBank;
		
		private System.Nullable<int> _invOpenThroughId;
		
		private string _status;
		
		private string _branchName;
		
		private string _branchAbrivation;
		
		private int _id;
		
		private string _invoiceLCNumber;
		
		private string _descripancyStatus;
		
		private System.Nullable<double> _marginPaid;
		
		private string _currencyType;
		
		private System.Nullable<double> _tollerance;
		
		private System.Nullable<System.DateTime> _interestBeginDate;
		
		private System.Nullable<double> _totalInvoiceValue;
		
		private System.Nullable<int> _invoiceSequence;
		
		private string _sequenceStatus;
		
		private System.Nullable<int> _numberOfSwift;
		
		private string _branchCode;
		
		private System.Nullable<System.DateTime> _shipmentDate;
		
		private System.Nullable<int> _openingPeriods;
		
		private System.Nullable<int> _userExpirationDates;
		
		private System.Nullable<System.DateTime> _lcOpeningDate;
		
		private string _confirmationStratus;
		
		public VW_LC_WITH_ADVICE_SIGHT()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lcNumber
		{
			get
			{
				return this._lcNumber;
			}
			set
			{
				if ((this._lcNumber != value))
				{
					this._lcNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcCode", DbType="Int")]
		public System.Nullable<int> lcCode
		{
			get
			{
				return this._lcCode;
			}
			set
			{
				if ((this._lcCode != value))
				{
					this._lcCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> valueDate
		{
			get
			{
				return this._valueDate;
			}
			set
			{
				if ((this._valueDate != value))
				{
					this._valueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitCode", DbType="NVarChar(50)")]
		public string permitCode
		{
			get
			{
				return this._permitCode;
			}
			set
			{
				if ((this._permitCode != value))
				{
					this._permitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitYear", DbType="Int")]
		public System.Nullable<int> permitYear
		{
			get
			{
				return this._permitYear;
			}
			set
			{
				if ((this._permitYear != value))
				{
					this._permitYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcValue", DbType="Float")]
		public System.Nullable<double> lcValue
		{
			get
			{
				return this._lcValue;
			}
			set
			{
				if ((this._lcValue != value))
				{
					this._lcValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openingCurrency", DbType="NVarChar(50)")]
		public string openingCurrency
		{
			get
			{
				return this._openingCurrency;
			}
			set
			{
				if ((this._openingCurrency != value))
				{
					this._openingCurrency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcOpeningCurrencyRate", DbType="Float")]
		public System.Nullable<double> lcOpeningCurrencyRate
		{
			get
			{
				return this._lcOpeningCurrencyRate;
			}
			set
			{
				if ((this._lcOpeningCurrencyRate != value))
				{
					this._lcOpeningCurrencyRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corespondenceID", DbType="Int")]
		public System.Nullable<int> corespondenceID
		{
			get
			{
				return this._corespondenceID;
			}
			set
			{
				if ((this._corespondenceID != value))
				{
					this._corespondenceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openThroughId", DbType="Int")]
		public System.Nullable<int> openThroughId
		{
			get
			{
				return this._openThroughId;
			}
			set
			{
				if ((this._openThroughId != value))
				{
					this._openThroughId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplyerName", DbType="NVarChar(255)")]
		public string supplyerName
		{
			get
			{
				return this._supplyerName;
			}
			set
			{
				if ((this._supplyerName != value))
				{
					this._supplyerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerAccount", DbType="NVarChar(50)")]
		public string customerAccount
		{
			get
			{
				return this._customerAccount;
			}
			set
			{
				if ((this._customerAccount != value))
				{
					this._customerAccount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerName", DbType="NVarChar(255)")]
		public string customerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this._customerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcStatus", DbType="NVarChar(50)")]
		public string lcStatus
		{
			get
			{
				return this._lcStatus;
			}
			set
			{
				if ((this._lcStatus != value))
				{
					this._lcStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referenceNo", DbType="NVarChar(50)")]
		public string referenceNo
		{
			get
			{
				return this._referenceNo;
			}
			set
			{
				if ((this._referenceNo != value))
				{
					this._referenceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> invoiceDate
		{
			get
			{
				return this._invoiceDate;
			}
			set
			{
				if ((this._invoiceDate != value))
				{
					this._invoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceValue", DbType="Float")]
		public System.Nullable<double> invoiceValue
		{
			get
			{
				return this._invoiceValue;
			}
			set
			{
				if ((this._invoiceValue != value))
				{
					this._invoiceValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceRate", DbType="Float")]
		public System.Nullable<double> invoiceRate
		{
			get
			{
				return this._invoiceRate;
			}
			set
			{
				if ((this._invoiceRate != value))
				{
					this._invoiceRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openThroughBank", DbType="NVarChar(255)")]
		public string openThroughBank
		{
			get
			{
				return this._openThroughBank;
			}
			set
			{
				if ((this._openThroughBank != value))
				{
					this._openThroughBank = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invOpenThroughId", DbType="Int")]
		public System.Nullable<int> invOpenThroughId
		{
			get
			{
				return this._invOpenThroughId;
			}
			set
			{
				if ((this._invOpenThroughId != value))
				{
					this._invOpenThroughId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchName", DbType="NVarChar(50)")]
		public string branchName
		{
			get
			{
				return this._branchName;
			}
			set
			{
				if ((this._branchName != value))
				{
					this._branchName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchAbrivation", DbType="NVarChar(50)")]
		public string branchAbrivation
		{
			get
			{
				return this._branchAbrivation;
			}
			set
			{
				if ((this._branchAbrivation != value))
				{
					this._branchAbrivation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceLCNumber", DbType="NVarChar(50)")]
		public string invoiceLCNumber
		{
			get
			{
				return this._invoiceLCNumber;
			}
			set
			{
				if ((this._invoiceLCNumber != value))
				{
					this._invoiceLCNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripancyStatus", DbType="NVarChar(50)")]
		public string descripancyStatus
		{
			get
			{
				return this._descripancyStatus;
			}
			set
			{
				if ((this._descripancyStatus != value))
				{
					this._descripancyStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marginPaid", DbType="Float")]
		public System.Nullable<double> marginPaid
		{
			get
			{
				return this._marginPaid;
			}
			set
			{
				if ((this._marginPaid != value))
				{
					this._marginPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyType", DbType="NVarChar(50)")]
		public string currencyType
		{
			get
			{
				return this._currencyType;
			}
			set
			{
				if ((this._currencyType != value))
				{
					this._currencyType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tollerance", DbType="Float")]
		public System.Nullable<double> tollerance
		{
			get
			{
				return this._tollerance;
			}
			set
			{
				if ((this._tollerance != value))
				{
					this._tollerance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interestBeginDate", DbType="Date")]
		public System.Nullable<System.DateTime> interestBeginDate
		{
			get
			{
				return this._interestBeginDate;
			}
			set
			{
				if ((this._interestBeginDate != value))
				{
					this._interestBeginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalInvoiceValue", DbType="Float")]
		public System.Nullable<double> totalInvoiceValue
		{
			get
			{
				return this._totalInvoiceValue;
			}
			set
			{
				if ((this._totalInvoiceValue != value))
				{
					this._totalInvoiceValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceSequence", DbType="Int")]
		public System.Nullable<int> invoiceSequence
		{
			get
			{
				return this._invoiceSequence;
			}
			set
			{
				if ((this._invoiceSequence != value))
				{
					this._invoiceSequence = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sequenceStatus", DbType="NVarChar(50)")]
		public string sequenceStatus
		{
			get
			{
				return this._sequenceStatus;
			}
			set
			{
				if ((this._sequenceStatus != value))
				{
					this._sequenceStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numberOfSwift", DbType="Int")]
		public System.Nullable<int> numberOfSwift
		{
			get
			{
				return this._numberOfSwift;
			}
			set
			{
				if ((this._numberOfSwift != value))
				{
					this._numberOfSwift = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchCode", DbType="NVarChar(50)")]
		public string branchCode
		{
			get
			{
				return this._branchCode;
			}
			set
			{
				if ((this._branchCode != value))
				{
					this._branchCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> shipmentDate
		{
			get
			{
				return this._shipmentDate;
			}
			set
			{
				if ((this._shipmentDate != value))
				{
					this._shipmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openingPeriods", DbType="Int")]
		public System.Nullable<int> openingPeriods
		{
			get
			{
				return this._openingPeriods;
			}
			set
			{
				if ((this._openingPeriods != value))
				{
					this._openingPeriods = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userExpirationDates", DbType="Int")]
		public System.Nullable<int> userExpirationDates
		{
			get
			{
				return this._userExpirationDates;
			}
			set
			{
				if ((this._userExpirationDates != value))
				{
					this._userExpirationDates = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcOpeningDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lcOpeningDate
		{
			get
			{
				return this._lcOpeningDate;
			}
			set
			{
				if ((this._lcOpeningDate != value))
				{
					this._lcOpeningDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmationStratus", DbType="NVarChar(50)")]
		public string confirmationStratus
		{
			get
			{
				return this._confirmationStratus;
			}
			set
			{
				if ((this._confirmationStratus != value))
				{
					this._confirmationStratus = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VW_LC_INCREMENTAMOUNT")]
	public partial class VW_LC_INCREMENTAMOUNT
	{
		
		private string _lcNumber;
		
		private System.Nullable<int> _lcCode;
		
		private System.Nullable<System.DateTime> _valueDate;
		
		private string _permitCode;
		
		private System.Nullable<int> _permitYear;
		
		private System.Nullable<double> _lcValue;
		
		private System.Nullable<double> _lcOpeningCurrencyRate;
		
		private System.Nullable<double> _marginPaid;
		
		private string _correspondentName;
		
		private string _aibAcountNo;
		
		private System.Nullable<int> _corespondenceID;
		
		private System.Nullable<int> _openThroughId;
		
		private string _bankName;
		
		private string _bankCode;
		
		private string _supplyerName;
		
		private string _customerAccount;
		
		private string _branchName;
		
		private string _branchAbrivation;
		
		private string _customerName;
		
		private string _confirmationStratus;
		
		private string _currencyType;
		
		private System.Nullable<double> _tollerance;
		
		private System.Nullable<double> _totalInvoiceValue;
		
		private string _openingCurrency;
		
		private string _accountBranch;
		
		private string _branchCode;
		
		private System.Nullable<double> _incremetAmount;
		
		private System.Nullable<int> _incrementPermitYear;
		
		private string _incrementPermitCode;
		
		private System.Nullable<System.DateTime> _incrementAmountValueDate;
		
		private System.Nullable<double> _incrementAmountRate;
		
		private int _id;
		
		private System.Nullable<int> _openingPeriods;
		
		private System.Nullable<int> _userExpirationDates;
		
		private System.Nullable<System.DateTime> _lcOpeningDate;
		
		public VW_LC_INCREMENTAMOUNT()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lcNumber
		{
			get
			{
				return this._lcNumber;
			}
			set
			{
				if ((this._lcNumber != value))
				{
					this._lcNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcCode", DbType="Int")]
		public System.Nullable<int> lcCode
		{
			get
			{
				return this._lcCode;
			}
			set
			{
				if ((this._lcCode != value))
				{
					this._lcCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> valueDate
		{
			get
			{
				return this._valueDate;
			}
			set
			{
				if ((this._valueDate != value))
				{
					this._valueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitCode", DbType="NVarChar(50)")]
		public string permitCode
		{
			get
			{
				return this._permitCode;
			}
			set
			{
				if ((this._permitCode != value))
				{
					this._permitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitYear", DbType="Int")]
		public System.Nullable<int> permitYear
		{
			get
			{
				return this._permitYear;
			}
			set
			{
				if ((this._permitYear != value))
				{
					this._permitYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcValue", DbType="Float")]
		public System.Nullable<double> lcValue
		{
			get
			{
				return this._lcValue;
			}
			set
			{
				if ((this._lcValue != value))
				{
					this._lcValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcOpeningCurrencyRate", DbType="Float")]
		public System.Nullable<double> lcOpeningCurrencyRate
		{
			get
			{
				return this._lcOpeningCurrencyRate;
			}
			set
			{
				if ((this._lcOpeningCurrencyRate != value))
				{
					this._lcOpeningCurrencyRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marginPaid", DbType="Float")]
		public System.Nullable<double> marginPaid
		{
			get
			{
				return this._marginPaid;
			}
			set
			{
				if ((this._marginPaid != value))
				{
					this._marginPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correspondentName", DbType="NVarChar(50)")]
		public string correspondentName
		{
			get
			{
				return this._correspondentName;
			}
			set
			{
				if ((this._correspondentName != value))
				{
					this._correspondentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aibAcountNo", DbType="NVarChar(50)")]
		public string aibAcountNo
		{
			get
			{
				return this._aibAcountNo;
			}
			set
			{
				if ((this._aibAcountNo != value))
				{
					this._aibAcountNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corespondenceID", DbType="Int")]
		public System.Nullable<int> corespondenceID
		{
			get
			{
				return this._corespondenceID;
			}
			set
			{
				if ((this._corespondenceID != value))
				{
					this._corespondenceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openThroughId", DbType="Int")]
		public System.Nullable<int> openThroughId
		{
			get
			{
				return this._openThroughId;
			}
			set
			{
				if ((this._openThroughId != value))
				{
					this._openThroughId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankName", DbType="NVarChar(255)")]
		public string bankName
		{
			get
			{
				return this._bankName;
			}
			set
			{
				if ((this._bankName != value))
				{
					this._bankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankCode", DbType="NVarChar(50)")]
		public string bankCode
		{
			get
			{
				return this._bankCode;
			}
			set
			{
				if ((this._bankCode != value))
				{
					this._bankCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplyerName", DbType="NVarChar(255)")]
		public string supplyerName
		{
			get
			{
				return this._supplyerName;
			}
			set
			{
				if ((this._supplyerName != value))
				{
					this._supplyerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerAccount", DbType="NVarChar(50)")]
		public string customerAccount
		{
			get
			{
				return this._customerAccount;
			}
			set
			{
				if ((this._customerAccount != value))
				{
					this._customerAccount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchName", DbType="NVarChar(50)")]
		public string branchName
		{
			get
			{
				return this._branchName;
			}
			set
			{
				if ((this._branchName != value))
				{
					this._branchName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchAbrivation", DbType="NVarChar(50)")]
		public string branchAbrivation
		{
			get
			{
				return this._branchAbrivation;
			}
			set
			{
				if ((this._branchAbrivation != value))
				{
					this._branchAbrivation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerName", DbType="NVarChar(255)")]
		public string customerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this._customerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmationStratus", DbType="NVarChar(50)")]
		public string confirmationStratus
		{
			get
			{
				return this._confirmationStratus;
			}
			set
			{
				if ((this._confirmationStratus != value))
				{
					this._confirmationStratus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyType", DbType="NVarChar(50)")]
		public string currencyType
		{
			get
			{
				return this._currencyType;
			}
			set
			{
				if ((this._currencyType != value))
				{
					this._currencyType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tollerance", DbType="Float")]
		public System.Nullable<double> tollerance
		{
			get
			{
				return this._tollerance;
			}
			set
			{
				if ((this._tollerance != value))
				{
					this._tollerance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalInvoiceValue", DbType="Float")]
		public System.Nullable<double> totalInvoiceValue
		{
			get
			{
				return this._totalInvoiceValue;
			}
			set
			{
				if ((this._totalInvoiceValue != value))
				{
					this._totalInvoiceValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openingCurrency", DbType="NVarChar(50)")]
		public string openingCurrency
		{
			get
			{
				return this._openingCurrency;
			}
			set
			{
				if ((this._openingCurrency != value))
				{
					this._openingCurrency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountBranch", DbType="NVarChar(50)")]
		public string accountBranch
		{
			get
			{
				return this._accountBranch;
			}
			set
			{
				if ((this._accountBranch != value))
				{
					this._accountBranch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branchCode", DbType="NVarChar(50)")]
		public string branchCode
		{
			get
			{
				return this._branchCode;
			}
			set
			{
				if ((this._branchCode != value))
				{
					this._branchCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incremetAmount", DbType="Float")]
		public System.Nullable<double> incremetAmount
		{
			get
			{
				return this._incremetAmount;
			}
			set
			{
				if ((this._incremetAmount != value))
				{
					this._incremetAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incrementPermitYear", DbType="Int")]
		public System.Nullable<int> incrementPermitYear
		{
			get
			{
				return this._incrementPermitYear;
			}
			set
			{
				if ((this._incrementPermitYear != value))
				{
					this._incrementPermitYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incrementPermitCode", DbType="NVarChar(50)")]
		public string incrementPermitCode
		{
			get
			{
				return this._incrementPermitCode;
			}
			set
			{
				if ((this._incrementPermitCode != value))
				{
					this._incrementPermitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incrementAmountValueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> incrementAmountValueDate
		{
			get
			{
				return this._incrementAmountValueDate;
			}
			set
			{
				if ((this._incrementAmountValueDate != value))
				{
					this._incrementAmountValueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incrementAmountRate", DbType="Float")]
		public System.Nullable<double> incrementAmountRate
		{
			get
			{
				return this._incrementAmountRate;
			}
			set
			{
				if ((this._incrementAmountRate != value))
				{
					this._incrementAmountRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openingPeriods", DbType="Int")]
		public System.Nullable<int> openingPeriods
		{
			get
			{
				return this._openingPeriods;
			}
			set
			{
				if ((this._openingPeriods != value))
				{
					this._openingPeriods = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userExpirationDates", DbType="Int")]
		public System.Nullable<int> userExpirationDates
		{
			get
			{
				return this._userExpirationDates;
			}
			set
			{
				if ((this._userExpirationDates != value))
				{
					this._userExpirationDates = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcOpeningDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lcOpeningDate
		{
			get
			{
				return this._lcOpeningDate;
			}
			set
			{
				if ((this._lcOpeningDate != value))
				{
					this._lcOpeningDate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
